[["Map",1,2,9,10],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.9.2","content-config-digest","f5064da06edf327d","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"static\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":true,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true,\"allowedHosts\":[]},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[],\"experimentalDefaultStyles\":true},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":{\"type\":\"shiki\",\"excludeLangs\":[\"math\"]},\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[],\"rehypePlugins\":[],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"responsiveImages\":false,\"headingIdCompat\":false,\"preserveScriptOrder\":false,\"csp\":false},\"legacy\":{\"collections\":false}}","blog",["Map",11,12,29,30,65,66,83,84,101,102,130,131,148,149,166,167,195,196,223,224,251,252,284,285,327,328,370,371,400,401,424,425],"developer-tools/error404",{"id":11,"data":13,"body":17,"filePath":18,"digest":19,"rendered":20,"legacyId":28},{"title":14,"description":15,"pubDate":16},"Error 404: Page Not Found","For 404 errors","Jul 13, 2025","\u003Cdiv style=\"text-align: center; font-family: sans-serif; margin-top: 10vh;\">\r\n  \u003Ch1 style=\"font-size: 3rem;\">Error 404: Page Not Found\u003C/h1>\r\n  \u003Cp style=\"font-size: 1.5rem;\">Oops! Page not found.\u003C/p>\r\n  \u003Cp>The page you’re looking for doesn’t exist or has been moved.\u003C/p>\r\n\u003C/div>","src/content/blog/Developer Tools/error404.md","f05698d9d259e058",{"html":21,"metadata":22},"\u003Cdiv style=\"text-align: center; font-family: sans-serif; margin-top: 10vh;\">\n  \u003Ch1 style=\"font-size: 3rem;\">Error 404: Page Not Found\u003C/h1>\n  \u003Cp style=\"font-size: 1.5rem;\">Oops! Page not found.\u003C/p>\n  \u003Cp>The page you’re looking for doesn’t exist or has been moved.\u003C/p>\n\u003C/div>",{"headings":23,"localImagePaths":24,"remoteImagePaths":25,"frontmatter":26,"imagePaths":27},[],[],[],{"title":14,"description":15,"pubDate":16},[],"Developer Tools/error404.md","projects/template-copy-2",{"id":29,"data":31,"body":37,"filePath":38,"digest":39,"rendered":40,"legacyId":64},{"title":32,"description":33,"pubDate":34,"image":35,"skills":36},"Preview Title","Preview Description","Jan 1, 2000","/images/previews/doodleJump.png",[],"# Title\r\n## Overview\r\n\u003Cstrong>Motivation:\u003C/strong> This project was \r\n\r\n\u003Cstrong>Tech Stack:\u003C/strong> C++\r\n\r\nFor the final project, I implemented a simplified version of Doodle Jump on an \u003Ca href=\"https://www.amd.com/en/corporate/university-program/aup-boards/realdigital-urbana-board.html\" target=\"_blank\" rel=\"noopener noreferrer\">RealDigital Urbana Board\u003C/a>. Using a Spartan-7 FPGA with a MicroBlaze processor, I developed a real-time gaming environment that integrates gameplay mechanics, graphics, and keyboard controls. The game features character movement, random platform generation, collision detection, scoring, and an animated character, all rendered on a 640 by 480 screen. To achieve this, I implemented SPI communication for USB keyboard inputs and VGA-to-HDMI conversion. I designed custom modules for the gameplay features, showcasing the FPGA's capabilities through an interactive game.\r\n\r\n\u003Cstrong>Source Code: \u003C/strong> \u003C/strong>\u003Ca href=\"https://github.com/Krish-Gandhi/VirtualWhiteboard\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub Repository\u003C/a>\r\n\r\n\u003Cvideo width=\"560\" height=\"420\" controls>\r\n    \u003Csource src=\"path/to/your/video.mp4\" type=\"video/mp4\">\r\n    Your browser does not support the video tag.\r\n\u003C/video>\r\n\r\n---\r\n\r\n### Notes\r\n- Even though this was a partner class, my partner did not contribute to anything in this class from about Week 4 to the end. He didn't download the given files from the 5th lab on, and did not make a single contribution to this final project.\r\n- This final project was built as an extension of the 6th lab in this course, so I have attached the lab report for both Lab 6 and the Final Project. To see all the design decisions I made, look through these reports.\r\n\r\n### Lab Reports\r\n\u003Ca href=\"../blog_files\\DoodleJump\\lab 6 report (1).pdf\" target=\"_blank\" rel=\"noopener noreferrer\">Lab 6 Report\u003C/a> | \u003Ca href=\"../blog_files\\DoodleJump\\Final Project Report.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">Final Project Report\u003C/a>","src/content/blog/Projects/template copy 2.md","51826234629a1671",{"html":41,"metadata":42},"\u003Ch1 id=\"title\">Title\u003C/h1>\n\u003Ch2 id=\"overview\">Overview\u003C/h2>\n\u003Cp>\u003Cstrong>Motivation:\u003C/strong> This project was\u003C/p>\n\u003Cp>\u003Cstrong>Tech Stack:\u003C/strong> C++\u003C/p>\n\u003Cp>For the final project, I implemented a simplified version of Doodle Jump on an \u003Ca href=\"https://www.amd.com/en/corporate/university-program/aup-boards/realdigital-urbana-board.html\" target=\"_blank\" rel=\"noopener noreferrer\">RealDigital Urbana Board\u003C/a>. Using a Spartan-7 FPGA with a MicroBlaze processor, I developed a real-time gaming environment that integrates gameplay mechanics, graphics, and keyboard controls. The game features character movement, random platform generation, collision detection, scoring, and an animated character, all rendered on a 640 by 480 screen. To achieve this, I implemented SPI communication for USB keyboard inputs and VGA-to-HDMI conversion. I designed custom modules for the gameplay features, showcasing the FPGA’s capabilities through an interactive game.\u003C/p>\n\u003Cp>\u003Cstrong>Source Code: \u003C/strong> \u003Ca href=\"https://github.com/Krish-Gandhi/VirtualWhiteboard\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub Repository\u003C/a>\u003C/p>\n\u003Cvideo width=\"560\" height=\"420\" controls>\n    \u003Csource src=\"path/to/your/video.mp4\" type=\"video/mp4\">\n    Your browser does not support the video tag.\n\u003C/video>\n\u003Chr>\n\u003Ch3 id=\"notes\">Notes\u003C/h3>\n\u003Cul>\n\u003Cli>Even though this was a partner class, my partner did not contribute to anything in this class from about Week 4 to the end. He didn’t download the given files from the 5th lab on, and did not make a single contribution to this final project.\u003C/li>\n\u003Cli>This final project was built as an extension of the 6th lab in this course, so I have attached the lab report for both Lab 6 and the Final Project. To see all the design decisions I made, look through these reports.\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"lab-reports\">Lab Reports\u003C/h3>\n\u003Cp>\u003Ca href=\"../blog_files\\DoodleJump\\lab 6 report (1).pdf\" target=\"_blank\" rel=\"noopener noreferrer\">Lab 6 Report\u003C/a> | \u003Ca href=\"../blog_files\\DoodleJump\\Final Project Report.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">Final Project Report\u003C/a>\u003C/p>",{"headings":43,"localImagePaths":59,"remoteImagePaths":60,"frontmatter":61,"imagePaths":63},[44,48,52,56],{"depth":45,"slug":46,"text":47},1,"title","Title",{"depth":49,"slug":50,"text":51},2,"overview","Overview",{"depth":53,"slug":54,"text":55},3,"notes","Notes",{"depth":53,"slug":57,"text":58},"lab-reports","Lab Reports",[],[],{"title":32,"description":33,"pubDate":34,"image":35,"skills":62},[],[],"Projects/template copy 2.md","projects/template-copy-4",{"id":65,"data":67,"body":37,"filePath":69,"digest":39,"rendered":70,"legacyId":82},{"title":32,"description":33,"pubDate":34,"image":35,"skills":68},[],"src/content/blog/Projects/template copy 4.md",{"html":41,"metadata":71},{"headings":72,"localImagePaths":77,"remoteImagePaths":78,"frontmatter":79,"imagePaths":81},[73,74,75,76],{"depth":45,"slug":46,"text":47},{"depth":49,"slug":50,"text":51},{"depth":53,"slug":54,"text":55},{"depth":53,"slug":57,"text":58},[],[],{"title":32,"description":33,"pubDate":34,"image":35,"skills":80},[],[],"Projects/template copy 4.md","projects/template-copy-3",{"id":83,"data":85,"body":37,"filePath":87,"digest":39,"rendered":88,"legacyId":100},{"title":32,"description":33,"pubDate":34,"image":35,"skills":86},[],"src/content/blog/Projects/template copy 3.md",{"html":41,"metadata":89},{"headings":90,"localImagePaths":95,"remoteImagePaths":96,"frontmatter":97,"imagePaths":99},[91,92,93,94],{"depth":45,"slug":46,"text":47},{"depth":49,"slug":50,"text":51},{"depth":53,"slug":54,"text":55},{"depth":53,"slug":57,"text":58},[],[],{"title":32,"description":33,"pubDate":34,"image":35,"skills":98},[],[],"Projects/template copy 3.md","projects/multi-lingual-translator",{"id":101,"data":103,"body":113,"filePath":114,"digest":115,"rendered":116,"legacyId":129},{"title":104,"description":105,"pubDate":106,"image":107,"skills":108},"AI Multi-Lingual Translator and Summarizer","This project was made by utilizing Facebook's mbart-large-50-many-to-many-mmt model hosted by Hugging Face and Google's gemma-2-2b-it model, which I am currently hosting model thru Google Cloud Platform's Vertex AI platform.","Jan 12, 2025","/images/previews/translatorAndSummarizer.png",[109,110,111,112],"AI/ML","Back-End/Cloud Development","GCP","Python","# AI Multi-Lingual Translator and Summarizer\r\n## Overview\r\n\u003Cstrong>Motivation:\u003C/strong> This project was \r\n\r\n\u003Cstrong>Tech Stack:\u003C/strong> Python, Hugging Face, Google Cloud Platform (Vertex AI)\r\n\r\nThe motivation behind this project was simply the fact that I wanted to learn more about using LLMs. So, I went to Hugging Face and found a couple that fit my use-case. I deployed one of them on Google Cloud Platform's Vertex AI and created an API endpoint to call inferences. To save on costs, I am using the free trial of GCP. When my free trial credits run out, I will take down the endpoint and link 1 of the project will no longer work. However, live link 2 will be active.\r\n\r\n\u003Cp>\u003Cstrong>Live Link 1 (With Summarizer): \u003C/strong>\u003Ca href=\"https://multi-lingual-translator-and-summarizer-krish-gandhi.streamlit.app/\" target=\"_blank\" rel=\"noopener noreferrer\">AI Multi-Lingual Translator and Summarizer\u003C/a>\u003C/p>\r\n\u003Cp>\u003Cstrong>Live Link 2 (Without Summarizer): \u003C/strong>\u003Ca href=\"https://multi-lingual-translator-krish-gandhi.streamlit.app/\" target=\"_blank\" rel=\"noopener noreferrer\">AI Multi-Lingual Translator\u003C/a>\u003C/p>\r\n                                    \r\n\r\n\u003Cvideo width=\"560\" height=\"420\" controls>\r\n    \u003Csource src=\"path/to/your/video.mp4\" type=\"video/mp4\">\r\n    Your browser does not support the video tag.\r\n\u003C/video>\r\nNOTE: There is no demo video yet, check back soon!\r\n\r\n---\r\n\r\n### Notes\r\nThis project was made by utilizing two different LLMs. For translation, I used Facebook's mbart-large-50-many-to-many-mmt model with 611M parameters. This model is a fine-tuned checkpoint of mBART-large-50. mbart-large-50-many-to-many-mmt is fine-tuned for multilingual machine translation. The model has support for 53 different languages. This model is hosted by Hugging Face and inferences are made via API calls, which are limited to 1,000 per day. For summaries, I used Google's gemma-2-2b-it model with 2B parameters. This model is a conversational Text Generation model in the Gemma 2 family. I am currently hosting this model thru Google Cloud Platform's Vertex AI platform. I have set up an API endpoint to use to make inferences with this model. To save on costs, I am using the free trial of GCP. When my free trial credits run out, I will take down the endpoint and link 1 of the project will no longer work. However, live link 2 will be active. This is essentially the same project, but without the summarization model.","src/content/blog/Projects/multi-lingual-translator.md","084ab993e3975774",{"html":117,"metadata":118},"\u003Ch1 id=\"ai-multi-lingual-translator-and-summarizer\">AI Multi-Lingual Translator and Summarizer\u003C/h1>\n\u003Ch2 id=\"overview\">Overview\u003C/h2>\n\u003Cp>\u003Cstrong>Motivation:\u003C/strong> This project was\u003C/p>\n\u003Cp>\u003Cstrong>Tech Stack:\u003C/strong> Python, Hugging Face, Google Cloud Platform (Vertex AI)\u003C/p>\n\u003Cp>The motivation behind this project was simply the fact that I wanted to learn more about using LLMs. So, I went to Hugging Face and found a couple that fit my use-case. I deployed one of them on Google Cloud Platform’s Vertex AI and created an API endpoint to call inferences. To save on costs, I am using the free trial of GCP. When my free trial credits run out, I will take down the endpoint and link 1 of the project will no longer work. However, live link 2 will be active.\u003C/p>\n\u003Cp>\u003Cstrong>Live Link 1 (With Summarizer): \u003C/strong>\u003Ca href=\"https://multi-lingual-translator-and-summarizer-krish-gandhi.streamlit.app/\" target=\"_blank\" rel=\"noopener noreferrer\">AI Multi-Lingual Translator and Summarizer\u003C/a>\u003C/p>\n\u003Cp>\u003Cstrong>Live Link 2 (Without Summarizer): \u003C/strong>\u003Ca href=\"https://multi-lingual-translator-krish-gandhi.streamlit.app/\" target=\"_blank\" rel=\"noopener noreferrer\">AI Multi-Lingual Translator\u003C/a>\u003C/p>\n\u003Cvideo width=\"560\" height=\"420\" controls>\n    \u003Csource src=\"path/to/your/video.mp4\" type=\"video/mp4\">\n    Your browser does not support the video tag.\n\u003C/video>\nNOTE: There is no demo video yet, check back soon!\n\u003Chr>\n\u003Ch3 id=\"notes\">Notes\u003C/h3>\n\u003Cp>This project was made by utilizing two different LLMs. For translation, I used Facebook’s mbart-large-50-many-to-many-mmt model with 611M parameters. This model is a fine-tuned checkpoint of mBART-large-50. mbart-large-50-many-to-many-mmt is fine-tuned for multilingual machine translation. The model has support for 53 different languages. This model is hosted by Hugging Face and inferences are made via API calls, which are limited to 1,000 per day. For summaries, I used Google’s gemma-2-2b-it model with 2B parameters. This model is a conversational Text Generation model in the Gemma 2 family. I am currently hosting this model thru Google Cloud Platform’s Vertex AI platform. I have set up an API endpoint to use to make inferences with this model. To save on costs, I am using the free trial of GCP. When my free trial credits run out, I will take down the endpoint and link 1 of the project will no longer work. However, live link 2 will be active. This is essentially the same project, but without the summarization model.\u003C/p>",{"headings":119,"localImagePaths":124,"remoteImagePaths":125,"frontmatter":126,"imagePaths":128},[120,122,123],{"depth":45,"slug":121,"text":104},"ai-multi-lingual-translator-and-summarizer",{"depth":49,"slug":50,"text":51},{"depth":53,"slug":54,"text":55},[],[],{"title":104,"description":105,"pubDate":106,"image":107,"skills":127},[109,110,111,112],[],"Projects/multi-lingual-translator.md","projects/template-copy-5",{"id":130,"data":132,"body":37,"filePath":134,"digest":39,"rendered":135,"legacyId":147},{"title":32,"description":33,"pubDate":34,"image":35,"skills":133},[],"src/content/blog/Projects/template copy 5.md",{"html":41,"metadata":136},{"headings":137,"localImagePaths":142,"remoteImagePaths":143,"frontmatter":144,"imagePaths":146},[138,139,140,141],{"depth":45,"slug":46,"text":47},{"depth":49,"slug":50,"text":51},{"depth":53,"slug":54,"text":55},{"depth":53,"slug":57,"text":58},[],[],{"title":32,"description":33,"pubDate":34,"image":35,"skills":145},[],[],"Projects/template copy 5.md","projects/template-copy-6",{"id":148,"data":150,"body":37,"filePath":152,"digest":39,"rendered":153,"legacyId":165},{"title":32,"description":33,"pubDate":34,"image":35,"skills":151},[],"src/content/blog/Projects/template copy 6.md",{"html":41,"metadata":154},{"headings":155,"localImagePaths":160,"remoteImagePaths":161,"frontmatter":162,"imagePaths":164},[156,157,158,159],{"depth":45,"slug":46,"text":47},{"depth":49,"slug":50,"text":51},{"depth":53,"slug":54,"text":55},{"depth":53,"slug":57,"text":58},[],[],{"title":32,"description":33,"pubDate":34,"image":35,"skills":163},[],[],"Projects/template copy 6.md","projects/auto-back-tester",{"id":166,"data":168,"body":176,"filePath":177,"digest":178,"rendered":179,"legacyId":194},{"title":169,"description":170,"pubDate":171,"image":172,"skills":173},"Automatic Algorithm Trading Strategy Backtesting Pipeline","Using an Ubuntu VM, Jenkins, and Strategy Studios, I built a CI/CD pipeline to automatically pull and backtest algorithmic trading strategies, and push the results back to GitLab.","Dec 22, 2024","/images/previews/autoBacktest.png",[174,112,175],"Jenkins","C++","# Automatic Algorithm Trading Strategy Backtesting Pipeline\r\n## Overview\r\n\u003Cstrong>Motivation:\u003C/strong> This project was done as part of a final project for IE 421 - High Frequency Trading Technology at the University of Illinois at Urbana-Champaign. The whole project was to build a trading strategy to trade $GBTC. My portion of the project was to build an automated backtesting pipeline, which I have highlighted in this video.\r\n\r\n\u003Cstrong>Tech Stack:\u003C/strong> Ubuntu, Jenkins, Python, C++\r\n\r\nThis Jenkins pipeline runs on an Ubuntu VM pulls the strategy from a GitLab repository, backtests the strategy on a given dates, and pushes the output back to the GitLab repository. Unfortunately, due to time constraints, we were unable to complete this project, but I still recieved an A on this project and an A+ in the course, because the time constraints were factored into the grading.\r\n\r\n\u003Cstrong>Source Code: \u003C/strong> \u003C/strong>\u003Ca href=\"https://gitlab.engr.illinois.edu/ie421_high_frequency_trading_fall_2024/ie421_hft_fall_2024_group_07/group_07_project\" target=\"_blank\" rel=\"noopener noreferrer\">GitLab Repository\u003C/a>\r\n\r\n\u003Cvideo width=\"560\" height=\"420\" controls>\r\n    \u003Csource src=\"videos\\ie421explanation.mp4\" type=\"video/mp4\">\r\n    Your browser does not support the video tag.\r\n\u003C/video>\r\n\r\n---\r\n\r\n### Report\r\nAn in-depth explanation on the design decisions made, as well as an overview of the project, can be found in the GitLab repository.","src/content/blog/Projects/auto-back-tester.md","c615f0a298e2aec0",{"html":180,"metadata":181},"\u003Ch1 id=\"automatic-algorithm-trading-strategy-backtesting-pipeline\">Automatic Algorithm Trading Strategy Backtesting Pipeline\u003C/h1>\n\u003Ch2 id=\"overview\">Overview\u003C/h2>\n\u003Cp>\u003Cstrong>Motivation:\u003C/strong> This project was done as part of a final project for IE 421 - High Frequency Trading Technology at the University of Illinois at Urbana-Champaign. The whole project was to build a trading strategy to trade $GBTC. My portion of the project was to build an automated backtesting pipeline, which I have highlighted in this video.\u003C/p>\n\u003Cp>\u003Cstrong>Tech Stack:\u003C/strong> Ubuntu, Jenkins, Python, C++\u003C/p>\n\u003Cp>This Jenkins pipeline runs on an Ubuntu VM pulls the strategy from a GitLab repository, backtests the strategy on a given dates, and pushes the output back to the GitLab repository. Unfortunately, due to time constraints, we were unable to complete this project, but I still recieved an A on this project and an A+ in the course, because the time constraints were factored into the grading.\u003C/p>\n\u003Cp>\u003Cstrong>Source Code: \u003C/strong> \u003Ca href=\"https://gitlab.engr.illinois.edu/ie421_high_frequency_trading_fall_2024/ie421_hft_fall_2024_group_07/group_07_project\" target=\"_blank\" rel=\"noopener noreferrer\">GitLab Repository\u003C/a>\u003C/p>\n\u003Cvideo width=\"560\" height=\"420\" controls>\n    \u003Csource src=\"videos\\ie421explanation.mp4\" type=\"video/mp4\">\n    Your browser does not support the video tag.\n\u003C/video>\n\u003Chr>\n\u003Ch3 id=\"report\">Report\u003C/h3>\n\u003Cp>An in-depth explanation on the design decisions made, as well as an overview of the project, can be found in the GitLab repository.\u003C/p>",{"headings":182,"localImagePaths":189,"remoteImagePaths":190,"frontmatter":191,"imagePaths":193},[183,185,186],{"depth":45,"slug":184,"text":169},"automatic-algorithm-trading-strategy-backtesting-pipeline",{"depth":49,"slug":50,"text":51},{"depth":53,"slug":187,"text":188},"report","Report",[],[],{"title":169,"description":170,"pubDate":171,"image":172,"skills":192},[174,112,175],[],"Projects/auto-back-tester.md","projects/doodle-jump",{"id":195,"data":197,"body":205,"filePath":206,"digest":207,"rendered":208,"legacyId":222},{"title":198,"description":199,"pubDate":200,"image":35,"skills":201},"Doodle Jump on an FPGA","I implemented Doodle Jump on a RealDigital Urbana Board with an AMD Spartan 7 FPGA. I also implemented a MicroBlaze Processor to help wiht USB I/O from a keyboard and VGA/HDMI output. Who doesn't love Doodle Jump?","Dec 21, 2024",[202,203,204],"Embedded Systems/SoC","SystemVerilog","C","# Doodle Jump on an FPGA\n## Overview\n\u003Cstrong>Motivation:\u003C/strong> This project was done as my final project for ECE 385 - Digital Systems Laboratory at the University of Illinois at Urbana-Champaign. I have attached the final video demo here. I recieved an A on the final project and an A- in the course.\n\n\u003Cstrong>Tech Stack:\u003C/strong> SystemVerilog, C\n\nFor the final project, I implemented a simplified version of Doodle Jump on an \u003Ca href=\"https://www.amd.com/en/corporate/university-program/aup-boards/realdigital-urbana-board.html\" target=\"_blank\" rel=\"noopener noreferrer\">RealDigital Urbana Board\u003C/a>. Using a Spartan-7 FPGA with a MicroBlaze processor, I developed a real-time gaming environment that integrates gameplay mechanics, graphics, and keyboard controls. The game features character movement, random platform generation, collision detection, scoring, and an animated character, all rendered on a 640 by 480 screen. To achieve this, I implemented SPI communication for USB keyboard inputs and VGA-to-HDMI conversion. I designed custom modules for the gameplay features, showcasing the FPGA's capabilities through an interactive game.\n\n\u003Cstrong>Source Code: \u003C/strong>Unfortunately, due to ECE 385's strict course guidelines, I am unable to post my code to any online source at all. I have, however, attached my Final Project Lab Report, which has descriptions of how my code's functionality and how it was written, and Final Project Video Demo.\n\n\u003Cvideo width=\"560\" height=\"420\" controls>\n    \u003Csource src=\"videos/doodleJumpPresentation.mp4\" type=\"video/mp4\">\n    Your browser does not support the video tag.\n\u003C/video>\n\n---\n\n### Notes\n- Even though this was a partner class, my partner did not contribute to anything in this class from about Week 4 to the end. He didn't download the given files from the 5th lab on, and did not make a single contribution to this final project.\n- This final project was built as an extension of the 6th lab in this course, so I have attached the lab report for both Lab 6 and the Final Project. To see all the design decisions I made, look through these reports.\n\n### Lab Reports\n\u003Ca href=\"files\\lab 6 report (1).pdf\" target=\"_blank\" rel=\"noopener noreferrer\">Lab 6 Report\u003C/a> | \u003Ca href=\"files\\Final Project Report.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">Final Project Report\u003C/a>","src/content/blog/Projects/doodle-jump.md","227dffeac10de46c",{"html":209,"metadata":210},"\u003Ch1 id=\"doodle-jump-on-an-fpga\">Doodle Jump on an FPGA\u003C/h1>\n\u003Ch2 id=\"overview\">Overview\u003C/h2>\n\u003Cp>\u003Cstrong>Motivation:\u003C/strong> This project was done as my final project for ECE 385 - Digital Systems Laboratory at the University of Illinois at Urbana-Champaign. I have attached the final video demo here. I recieved an A on the final project and an A- in the course.\u003C/p>\n\u003Cp>\u003Cstrong>Tech Stack:\u003C/strong> SystemVerilog, C\u003C/p>\n\u003Cp>For the final project, I implemented a simplified version of Doodle Jump on an \u003Ca href=\"https://www.amd.com/en/corporate/university-program/aup-boards/realdigital-urbana-board.html\" target=\"_blank\" rel=\"noopener noreferrer\">RealDigital Urbana Board\u003C/a>. Using a Spartan-7 FPGA with a MicroBlaze processor, I developed a real-time gaming environment that integrates gameplay mechanics, graphics, and keyboard controls. The game features character movement, random platform generation, collision detection, scoring, and an animated character, all rendered on a 640 by 480 screen. To achieve this, I implemented SPI communication for USB keyboard inputs and VGA-to-HDMI conversion. I designed custom modules for the gameplay features, showcasing the FPGA’s capabilities through an interactive game.\u003C/p>\n\u003Cp>\u003Cstrong>Source Code: \u003C/strong>Unfortunately, due to ECE 385’s strict course guidelines, I am unable to post my code to any online source at all. I have, however, attached my Final Project Lab Report, which has descriptions of how my code’s functionality and how it was written, and Final Project Video Demo.\u003C/p>\n\u003Cvideo width=\"560\" height=\"420\" controls>\n    \u003Csource src=\"videos/doodleJumpPresentation.mp4\" type=\"video/mp4\">\n    Your browser does not support the video tag.\n\u003C/video>\n\u003Chr>\n\u003Ch3 id=\"notes\">Notes\u003C/h3>\n\u003Cul>\n\u003Cli>Even though this was a partner class, my partner did not contribute to anything in this class from about Week 4 to the end. He didn’t download the given files from the 5th lab on, and did not make a single contribution to this final project.\u003C/li>\n\u003Cli>This final project was built as an extension of the 6th lab in this course, so I have attached the lab report for both Lab 6 and the Final Project. To see all the design decisions I made, look through these reports.\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"lab-reports\">Lab Reports\u003C/h3>\n\u003Cp>\u003Ca href=\"files\\lab 6 report (1).pdf\" target=\"_blank\" rel=\"noopener noreferrer\">Lab 6 Report\u003C/a> | \u003Ca href=\"files\\Final Project Report.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">Final Project Report\u003C/a>\u003C/p>",{"headings":211,"localImagePaths":217,"remoteImagePaths":218,"frontmatter":219,"imagePaths":221},[212,214,215,216],{"depth":45,"slug":213,"text":198},"doodle-jump-on-an-fpga",{"depth":49,"slug":50,"text":51},{"depth":53,"slug":54,"text":55},{"depth":53,"slug":57,"text":58},[],[],{"title":198,"description":199,"pubDate":200,"image":35,"skills":220},[202,203,204],[],"Projects/doodle-jump.md","projects/portfolio-website-v1",{"id":223,"data":225,"body":234,"filePath":235,"digest":236,"rendered":237,"legacyId":250},{"title":226,"description":227,"pubDate":228,"image":229,"skills":230},"Porfolio Website v1","This was my old portfolio website. I built it to show off my software engineering skills and project. This project is still live and is hosted for free on GitHub Pages.","May 27, 2025","/images/previews/oldSite.png",[231,232,233],"Front End Development","JavaScript","HTML","# Portfolio Website v1\r\n## Overview\r\n\u003Cstrong>Motivation:\u003C/strong> This project was essentially used as a way to display my skills and dip my toes in the world of frontend. I don't particularly aspire to be a front end developer, but I felt I should try it once.\r\n\r\n\u003Cstrong>Tech Stack:\u003C/strong> JavaScript, HTML, CSS, GitHub Pages\r\n\r\nFor this project, I took inspiration from ajlkn's HTML5 UP sites. The site was built using raw JavaScript and HTML, and was hosted on GitHub Pages because it was an easy solution. The site has a similar features, but notably has a skills section and a slideshow of the projects preview images that I chose to not implement on this site. Ultimately, I decided to build a new one from scratch because this one was a little too basic, and took a good amount of work to add or change pages. However, my old site is still live and you can visit it via the link below. \r\n\r\n\u003Cstrong>Live Site: \u003C/strong> \u003C/strong>\u003Ca href=\"https://krish-gandhi.github.io/\" target=\"_blank\" rel=\"noopener noreferrer\">Krish Gandhi - Personal Site\u003C/a>\r\n\r\n\u003Cstrong>Source Code: \u003C/strong> \u003C/strong>\u003Ca href=\"https://github.com/Krish-Gandhi/Krish-Gandhi.github.io\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub Repository\u003C/a>\r\n\r\n---","src/content/blog/Projects/portfolio-website-v1.md","10de7b3faaf17477",{"html":238,"metadata":239},"\u003Ch1 id=\"portfolio-website-v1\">Portfolio Website v1\u003C/h1>\n\u003Ch2 id=\"overview\">Overview\u003C/h2>\n\u003Cp>\u003Cstrong>Motivation:\u003C/strong> This project was essentially used as a way to display my skills and dip my toes in the world of frontend. I don’t particularly aspire to be a front end developer, but I felt I should try it once.\u003C/p>\n\u003Cp>\u003Cstrong>Tech Stack:\u003C/strong> JavaScript, HTML, CSS, GitHub Pages\u003C/p>\n\u003Cp>For this project, I took inspiration from ajlkn’s HTML5 UP sites. The site was built using raw JavaScript and HTML, and was hosted on GitHub Pages because it was an easy solution. The site has a similar features, but notably has a skills section and a slideshow of the projects preview images that I chose to not implement on this site. Ultimately, I decided to build a new one from scratch because this one was a little too basic, and took a good amount of work to add or change pages. However, my old site is still live and you can visit it via the link below.\u003C/p>\n\u003Cp>\u003Cstrong>Live Site: \u003C/strong> \u003Ca href=\"https://krish-gandhi.github.io/\" target=\"_blank\" rel=\"noopener noreferrer\">Krish Gandhi - Personal Site\u003C/a>\u003C/p>\n\u003Cp>\u003Cstrong>Source Code: \u003C/strong> \u003Ca href=\"https://github.com/Krish-Gandhi/Krish-Gandhi.github.io\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub Repository\u003C/a>\u003C/p>\n\u003Chr>",{"headings":240,"localImagePaths":245,"remoteImagePaths":246,"frontmatter":247,"imagePaths":249},[241,244],{"depth":45,"slug":242,"text":243},"portfolio-website-v1","Portfolio Website v1",{"depth":49,"slug":50,"text":51},[],[],{"title":226,"description":227,"pubDate":228,"image":229,"skills":248},[231,232,233],[],"Projects/portfolio-website-v1.md","projects/virtual-whiteboard",{"id":251,"data":253,"body":259,"filePath":260,"digest":261,"rendered":262,"legacyId":283},{"title":254,"description":255,"pubDate":256,"image":257,"skills":258},"Virtual Whiteboard","Utilizing OpenCV and Google's Mediapipe, I build an application that uses the user's device's camera. This program can track the user's hand(s) and use them to control the screen like a whiteboard.","May 16, 2024","/images/previews/virtualWhiteboard.png",[112,109],"# Virtual Whiteboard\r\n## Overview\r\n\u003Cstrong>Inspiration:\u003C/strong> The idea for this project came to me while I was on a video call. I was trying to explain how to do a Fourier transform to a friend and I tried to use a dry erase whiteboard to show them how I solved it. I quickly realized that the glare was too much and my writing was to small to be visible on the camera. I decided this would be a fun solution. This was also vaguely inspired from a video I remember seeing when I was young about Pranav Mistry's SixthSense.\r\n\r\n\u003Cstrong>Tech Stack:\u003C/strong> Python (OpenCV, Mediapipe, numpy)\r\n\r\nThis program utilizes your device's camera to mimic a digital whiteboard. When running, the user can fully control the program thru their device's camera by putting their hands in view of the camera and making certain gestures. For optimal hand detection, when trying to perform a gesture, try to have your entire hand in frame with your palm directly facing the camera. Performance is limited by your device's performance because this program runs frame by frame. As a result, lines may not appear continuous if you move your hands too fast. For optimal results, move your hand slowly to match your device's FPS.\r\n\r\n\u003Cstrong>Source Code: \u003C/strong>\u003Ca href=\"https://github.com/Krish-Gandhi/VirtualWhiteboard\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub Repository\u003C/a>\r\n\r\n\u003Cvideo width=\"560\" height=\"420\" controls>\r\n    \u003Csource src=\"path/to/your/video.mp4\" type=\"video/mp4\">\r\n    Your browser does not support the video tag.\r\n\u003C/video>\r\nNOTE: There is no demo video yet, check back soon!\r\n\u003Chr/>\r\n\r\n### Features\r\n\r\n\u003Cul>\r\n    \u003Cli>\u003Cstrong>Hand Movement/Position Tracking\u003C/strong> - Utilizing Mediapipe and OpenCV, I was able to\r\n        use the user's device's camera to track the user's hands. \r\n    \u003C/li>\r\n    \u003Cli>\u003Cstrong>Draw\u003C/strong> - When the user touches their thumb and pointer fingers, \r\n        the thumb landmark will turn blue. The thumb landmark will then leave a blue dot\r\n        wherever it does.\r\n    \u003C/li>\r\n    \u003Cli>\u003Cstrong>Erase\u003C/strong> - When the user touches their thumb and pinky fingers,\r\n        the thumb landmark will turn green and a countdown will begin. If the countdown\r\n        reaches zero, all drawn dots will be erased.\r\n    \u003C/li>\r\n    \u003Cli>\u003Cstrong>Exit\u003C/strong> - When the user touches their thumb and ring fingers,\r\n        the thumb landmark will turn red and a countdown will begin. If the countdown\r\n        reaches zero, the program will close.\r\n    \u003C/li>\r\n\u003C/ul>\r\n\r\n### Design Decisions\r\nI decided to make the thumb the center of all functionality because every other finger easily accessible to it. Thumb and the pointer finger have to be closer together to trigger the Draw functionalty than the thumb/pinky or thumb/ring finger have to be to trigger the Exit or Erase functionality. This was done on purpose to prevent any accidental drawing. The Erase and Exit features are triggered by a timer for this same reason, to prevent accidental erasing or exitting.\r\n\r\n### Possible Future Updates\r\n\r\n\u003Cul>\r\n    \u003Cli>\u003Cstrong>Undo\u003C/strong> - Undo the previous draw\u003C/li>\r\n    \u003Cli>\u003Cstrong>Change Draw Color\u003C/strong> - Change the color for future drawing\u003C/li>\r\n    \u003Cli>\u003Cstrong>Change Draw Radius\u003C/strong> - Change the radius of future dots drawn\u003C/li>\r\n\u003C/ul>","src/content/blog/Projects/virtual-whiteboard.md","d83aad152ddea718",{"html":263,"metadata":264},"\u003Ch1 id=\"virtual-whiteboard\">Virtual Whiteboard\u003C/h1>\n\u003Ch2 id=\"overview\">Overview\u003C/h2>\n\u003Cp>\u003Cstrong>Inspiration:\u003C/strong> The idea for this project came to me while I was on a video call. I was trying to explain how to do a Fourier transform to a friend and I tried to use a dry erase whiteboard to show them how I solved it. I quickly realized that the glare was too much and my writing was to small to be visible on the camera. I decided this would be a fun solution. This was also vaguely inspired from a video I remember seeing when I was young about Pranav Mistry’s SixthSense.\u003C/p>\n\u003Cp>\u003Cstrong>Tech Stack:\u003C/strong> Python (OpenCV, Mediapipe, numpy)\u003C/p>\n\u003Cp>This program utilizes your device’s camera to mimic a digital whiteboard. When running, the user can fully control the program thru their device’s camera by putting their hands in view of the camera and making certain gestures. For optimal hand detection, when trying to perform a gesture, try to have your entire hand in frame with your palm directly facing the camera. Performance is limited by your device’s performance because this program runs frame by frame. As a result, lines may not appear continuous if you move your hands too fast. For optimal results, move your hand slowly to match your device’s FPS.\u003C/p>\n\u003Cp>\u003Cstrong>Source Code: \u003C/strong>\u003Ca href=\"https://github.com/Krish-Gandhi/VirtualWhiteboard\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub Repository\u003C/a>\u003C/p>\n\u003Cvideo width=\"560\" height=\"420\" controls>\n    \u003Csource src=\"path/to/your/video.mp4\" type=\"video/mp4\">\n    Your browser does not support the video tag.\n\u003C/video>\nNOTE: There is no demo video yet, check back soon!\n\u003Chr>\n\u003Ch3 id=\"features\">Features\u003C/h3>\n\u003Cul>\n    \u003Cli>\u003Cstrong>Hand Movement/Position Tracking\u003C/strong> - Utilizing Mediapipe and OpenCV, I was able to\n        use the user's device's camera to track the user's hands. \n    \u003C/li>\n    \u003Cli>\u003Cstrong>Draw\u003C/strong> - When the user touches their thumb and pointer fingers, \n        the thumb landmark will turn blue. The thumb landmark will then leave a blue dot\n        wherever it does.\n    \u003C/li>\n    \u003Cli>\u003Cstrong>Erase\u003C/strong> - When the user touches their thumb and pinky fingers,\n        the thumb landmark will turn green and a countdown will begin. If the countdown\n        reaches zero, all drawn dots will be erased.\n    \u003C/li>\n    \u003Cli>\u003Cstrong>Exit\u003C/strong> - When the user touches their thumb and ring fingers,\n        the thumb landmark will turn red and a countdown will begin. If the countdown\n        reaches zero, the program will close.\n    \u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"design-decisions\">Design Decisions\u003C/h3>\n\u003Cp>I decided to make the thumb the center of all functionality because every other finger easily accessible to it. Thumb and the pointer finger have to be closer together to trigger the Draw functionalty than the thumb/pinky or thumb/ring finger have to be to trigger the Exit or Erase functionality. This was done on purpose to prevent any accidental drawing. The Erase and Exit features are triggered by a timer for this same reason, to prevent accidental erasing or exitting.\u003C/p>\n\u003Ch3 id=\"possible-future-updates\">Possible Future Updates\u003C/h3>\n\u003Cul>\n    \u003Cli>\u003Cstrong>Undo\u003C/strong> - Undo the previous draw\u003C/li>\n    \u003Cli>\u003Cstrong>Change Draw Color\u003C/strong> - Change the color for future drawing\u003C/li>\n    \u003Cli>\u003Cstrong>Change Draw Radius\u003C/strong> - Change the radius of future dots drawn\u003C/li>\n\u003C/ul>",{"headings":265,"localImagePaths":278,"remoteImagePaths":279,"frontmatter":280,"imagePaths":282},[266,268,269,272,275],{"depth":45,"slug":267,"text":254},"virtual-whiteboard",{"depth":49,"slug":50,"text":51},{"depth":53,"slug":270,"text":271},"features","Features",{"depth":53,"slug":273,"text":274},"design-decisions","Design Decisions",{"depth":53,"slug":276,"text":277},"possible-future-updates","Possible Future Updates",[],[],{"title":254,"description":255,"pubDate":256,"image":257,"skills":281},[112,109],[],"Projects/virtual-whiteboard.md","projects/portfolio-website-v2",{"id":284,"data":286,"body":296,"filePath":297,"digest":298,"rendered":299,"legacyId":326},{"title":287,"description":288,"pubDate":289,"image":290,"skills":291},"Porfolio Website v2","This is the site you are currently looking at. I built it because I felt my old one was kind of boring and lackluster. This one is built with Astro, hosted on GCP and is much easier to add pages to.","Jul 15, 2025","/images/previews/site.png",[231,110,111,232,292,233,112,293,294,295],"Astro","Render","Supabase","PostgreSQL","# Portfolio Website v2\n## Overview\n\u003Cstrong>Motivation:\u003C/strong> I wanted to build a more impressive portfolio website that had more quality-of-life features, so I did. I also wanted to build this completely from scratch, so I could make everything the way I wanted to.  \n\n\u003Cstrong>Tech Stack:\u003C/strong> GCP (Google Cloud, Google Cloud Scheduler), JavaScript, Astro, HTML, Python, Render, Supabase, PostgreSQL\n\nMy old portfolio website got the job done, but wasn't particularly impressive and was tedious to manage. This time around, I made the front-end a lot more modular by storing data in JSON and Markdown files. This makes it MUCH easier to edit and add to the site. I also wanted to give it some more flavor so, I added the terminal, an engagement tracker (click here), wrote an incoming network load simulator, attached a database and hosted it on the cloud. I hope you like it! \n\n\u003Cstrong>Source Code: \u003C/strong> \u003C/strong>\u003Ca href=\"https://github.com/Krish-Gandhi/PortfolioWebsite\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub Repository\u003C/a>\n\n---\n## Notes and Design Decisions\n### Astro\n\nI chose Astro for this project because I wanted to use something similar to the way GitHub Pages natively uses Jekyll. However, I wanted to host this page on GCP. After doing some research, I found that I could use Astro to type these blog posts as Markdown files and generate them on the site. This makes adding pages MUCH quicker and more convienient. \n\n### Supabase and PostgreSQL\n\nAdmittedly, I did use this project as an excuse to use PostgreSQL because I had never used it before. I chose Supabase here because of its generous free tier for running a PostgreSQL database. I use this database to store information for the engagement tracker on this site. Below is the database schema I am using.\n\n```{sql}\ncreate table public.\"Engagement\" (\n  slug character varying not null,\n  views bigint null default '0'::bigint,\n  constraint Engagement_pkey primary key (slug)\n) TABLESPACE pg_default;\n\ncreate table public.\"ViewerLogs\" (\n  id bigint generated by default as identity not null,\n  slug character varying not null,\n  time timestamp without time zone null default (now() AT TIME ZONE 'utc-6'::text),\n  \"sentIP\" character varying null,\n  constraint ViewerLogs_pkey primary key (id),\n  constraint PastDayViews_slug_fkey foreign KEY (slug) references \"Engagement\" (slug) on update CASCADE\n) TABLESPACE pg_default;\n```\n\n### Render, FastAPI and Uvicorn\n\nThe backend for this site is very simple is written in Python using FastAPI and Uvicorn. It is mainly just used for interacting with the database to read and update engagement data. Render has a great free tier for this (750 free instance hours per month). I am also using Render as a way to not eat up my GCP monthly free tier.\n\n### GCP - Hosting and Load Simulation\n\nI choose to host a majority of my personal projects on GCP because I do a majority of my professional work on AWS. So, I like to mix it up and learn different technologies. \n\nThe main problem with Render's free tier is that the instance for my backend server will shutdown if it is left idle for 16 minutes. (Note: Render's documentatation says it is 15 minutes, but checking the instance logs says 16 minutes.) This will lead to cold starts on API calls, which can create 2-3 minutes of latency. This is not awful in principle, but it is annoying. To combat this, I needed to ping the server to keep it awake. At first, I was running a simple cron job on GitHub Actions, but I quickly realized their cron jobs are unreliable in timing. They are extremly inconsistent and do not follow the schedule that is required for this use case. Instead, I am using Google Cloud Scheduler to ping the backend server every 15 minutes. This will simulate network load and keep the instance awake, preventing cold starts.","src/content/blog/Projects/portfolio-website-v2.md","9b61a21ce7a631fa",{"html":300,"metadata":301},"\u003Ch1 id=\"portfolio-website-v2\">Portfolio Website v2\u003C/h1>\n\u003Ch2 id=\"overview\">Overview\u003C/h2>\n\u003Cp>\u003Cstrong>Motivation:\u003C/strong> I wanted to build a more impressive portfolio website that had more quality-of-life features, so I did. I also wanted to build this completely from scratch, so I could make everything the way I wanted to.\u003C/p>\n\u003Cp>\u003Cstrong>Tech Stack:\u003C/strong> GCP (Google Cloud, Google Cloud Scheduler), JavaScript, Astro, HTML, Python, Render, Supabase, PostgreSQL\u003C/p>\n\u003Cp>My old portfolio website got the job done, but wasn’t particularly impressive and was tedious to manage. This time around, I made the front-end a lot more modular by storing data in JSON and Markdown files. This makes it MUCH easier to edit and add to the site. I also wanted to give it some more flavor so, I added the terminal, an engagement tracker (click here), wrote an incoming network load simulator, attached a database and hosted it on the cloud. I hope you like it!\u003C/p>\n\u003Cp>\u003Cstrong>Source Code: \u003C/strong> \u003Ca href=\"https://github.com/Krish-Gandhi/PortfolioWebsite\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub Repository\u003C/a>\u003C/p>\n\u003Chr>\n\u003Ch2 id=\"notes-and-design-decisions\">Notes and Design Decisions\u003C/h2>\n\u003Ch3 id=\"astro\">Astro\u003C/h3>\n\u003Cp>I chose Astro for this project because I wanted to use something similar to the way GitHub Pages natively uses Jekyll. However, I wanted to host this page on GCP. After doing some research, I found that I could use Astro to type these blog posts as Markdown files and generate them on the site. This makes adding pages MUCH quicker and more convienient.\u003C/p>\n\u003Ch3 id=\"supabase-and-postgresql\">Supabase and PostgreSQL\u003C/h3>\n\u003Cp>Admittedly, I did use this project as an excuse to use PostgreSQL because I had never used it before. I chose Supabase here because of its generous free tier for running a PostgreSQL database. I use this database to store information for the engagement tracker on this site. Below is the database schema I am using.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>create table public.\"Engagement\" (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>  slug character varying not null,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>  views bigint null default '0'::bigint,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>  constraint Engagement_pkey primary key (slug)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>) TABLESPACE pg_default;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>create table public.\"ViewerLogs\" (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>  id bigint generated by default as identity not null,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>  slug character varying not null,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>  time timestamp without time zone null default (now() AT TIME ZONE 'utc-6'::text),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>  \"sentIP\" character varying null,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>  constraint ViewerLogs_pkey primary key (id),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>  constraint PastDayViews_slug_fkey foreign KEY (slug) references \"Engagement\" (slug) on update CASCADE\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>) TABLESPACE pg_default;\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"render-fastapi-and-uvicorn\">Render, FastAPI and Uvicorn\u003C/h3>\n\u003Cp>The backend for this site is very simple is written in Python using FastAPI and Uvicorn. It is mainly just used for interacting with the database to read and update engagement data. Render has a great free tier for this (750 free instance hours per month). I am also using Render as a way to not eat up my GCP monthly free tier.\u003C/p>\n\u003Ch3 id=\"gcp---hosting-and-load-simulation\">GCP - Hosting and Load Simulation\u003C/h3>\n\u003Cp>I choose to host a majority of my personal projects on GCP because I do a majority of my professional work on AWS. So, I like to mix it up and learn different technologies.\u003C/p>\n\u003Cp>The main problem with Render’s free tier is that the instance for my backend server will shutdown if it is left idle for 16 minutes. (Note: Render’s documentatation says it is 15 minutes, but checking the instance logs says 16 minutes.) This will lead to cold starts on API calls, which can create 2-3 minutes of latency. This is not awful in principle, but it is annoying. To combat this, I needed to ping the server to keep it awake. At first, I was running a simple cron job on GitHub Actions, but I quickly realized their cron jobs are unreliable in timing. They are extremly inconsistent and do not follow the schedule that is required for this use case. Instead, I am using Google Cloud Scheduler to ping the backend server every 15 minutes. This will simulate network load and keep the instance awake, preventing cold starts.\u003C/p>",{"headings":302,"localImagePaths":321,"remoteImagePaths":322,"frontmatter":323,"imagePaths":325},[303,306,307,310,312,315,318],{"depth":45,"slug":304,"text":305},"portfolio-website-v2","Portfolio Website v2",{"depth":49,"slug":50,"text":51},{"depth":49,"slug":308,"text":309},"notes-and-design-decisions","Notes and Design Decisions",{"depth":53,"slug":311,"text":292},"astro",{"depth":53,"slug":313,"text":314},"supabase-and-postgresql","Supabase and PostgreSQL",{"depth":53,"slug":316,"text":317},"render-fastapi-and-uvicorn","Render, FastAPI and Uvicorn",{"depth":53,"slug":319,"text":320},"gcp---hosting-and-load-simulation","GCP - Hosting and Load Simulation",[],[],{"title":287,"description":288,"pubDate":289,"image":290,"skills":324},[231,110,111,232,292,233,112,293,294,295],[],"Projects/portfolio-website-v2.md","projects/ssh-server",{"id":327,"data":329,"body":336,"filePath":337,"digest":338,"rendered":339,"legacyId":369},{"title":330,"description":331,"pubDate":332,"image":333,"skills":334},"OpenSSH Server on Windows 11","I recently bought a new PC running Windows 11. While trying to set it up as an SSH server, I quickly found out there isn't a centralized place for OpenSSH tutorials. This blog will serve as a step-by-step guide to setting up a OpenSSH server on Windows 11.","Jan 13, 2025","/images/previews/sshServer.png",[335],"Networking","# Setting up an OpenSSH Server on Windows 11\r\n\r\n**Motivation:** I recently bought a new PC and wanted to set it up as a SSH server, so I could ssh into it from my laptop. However, I found it difficult to find the resources to setup/debug the server. I am writing this blog as a one-stop tutorial to help people set up their OpenSSH servers on Windows 11.\r\n\r\n## Step 1: Installation\r\n\r\nInstall the OpenSSH server using PowerShell by running PowerShell as an administrator and running the following command.\r\n```bash\r\nAdd-WindowsCapability -Online -Name OpenSSH.Server*\r\n```\r\n\r\nConfirm the installation by running the following command.\r\n```bash\r\nGet-WindowsCapability -Online | ? Name -like 'OpenSSH.Server*'\r\n```\r\n\r\nIf the output looks like this, the OpenSSH server is installed.\r\n```bash\r\nPS C:\\WINDOWS\\system32> Get-WindowsCapability -Online | ? Name -like 'OpenSSH.Server*'\r\n\r\n\r\nName  : OpenSSH.Server~~~~0.0.1.0\r\nState : Installed\r\n```\r\n\r\n## Step 2: Configuration\r\nFirst, check the status of the SSH server service by running the following command.\r\n```bash\r\nGet-Service -Name *ssh*\r\n```\r\n\r\nThe output should look like this. If the SSH agent is also installed, it will also appear here.\r\n```bash\r\nPS C:\\WINDOWS\\system32> Get-Service -Name *ssh*\r\n\r\nStatus   Name               DisplayName\r\n------   ----               -----------\r\nStopped  ssh-agent          OpenSSH Authentication Agent\r\nStopped  sshd               OpenSSH SSH Server\r\n```\r\n\r\nFor convenience, set the sshd service to the automatically start. Then, start the service. Do this by running these commands.\r\n```bash\r\nSet-Service -Name sshd -StartupType 'Automatic'\r\nStart-Service sshd\r\n```\r\n\r\nFinally, add a firewall rule to allow SSH traffic through port 22.\r\n```bash\r\nNew-NetFirewallRule -Name sshd -DisplayName 'OpenSSH Server (sshd)' -Enabled True -Direction Inbound -Protocol TCP -Action Allow -LocalPort 22\r\n```\r\n\r\n## (Optional, but Recommended) Step 3: Switch from CMD to PowerShell\r\nThe default terminal for a SSH server is the CMD. To switch it to PowerShell, run the following command.\r\n```bash\r\nNew-ItemProperty -Path \"HKLM:\\SOFTWARE\\OpenSSH\" -Name DefaultShell -Value \"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\" -PropertyType String -Force\r\n```\r\n\r\n## (Optional, but Recommended) Step 4: Configure Key Based Authorization\r\n\r\nPersonally, I use my Yubikey 5 to authenitcate into my SSH server. To make this possible we need to do a few things. Start by opening the server configuration file by running the following command.\r\n```bash\r\nnotepad.exe $env:PROGRAMDATA\\ssh\\sshd_config\r\n```\r\n\r\nTo disable password authenication and enable key-based authenication, uncomment the following settings and set them as follows.\r\n```\r\nPubkeyAuthentication yes\r\nPasswordAuthentication no\r\nPermitEmptyPasswords no\r\n```\r\n\r\n### If the user is NOT in the 'Administrator' group:\r\nUncomment the following line in the sshd_config file.\r\n```bash\r\nAuthorizedKeysFile\t.ssh/authorized_keys\r\n```\r\n\r\nThe ```.ssh``` folder and ```authorized_keys``` file must be created, as they don't exist by default. Run these commands back in the PowerShell terminal to create these and open the file.\r\n```bash\r\nmkdir \"$HOME\\.ssh\"\r\n$authorizedKeyFilePath = “$HOME\\.ssh\\authorized_keys”\r\nNew-Item $authorizedKeyFilePath\r\nnotepad.exe $authorizedKeyFilePath\r\n```\r\n\r\nPaste the public key you want to use into this file. Save and close this file. Next, make sure the file has the correct permissions. Only the system account should be able to access it. Do this by running these commands.\r\n\r\n```bash\r\nicacls.exe $authorizedKeyFilePath /remove “NT AUTHORITY\\Authenticated Users”\r\nicacls.exe $authorizedKeyFilePath /inheritance:r\r\nGet-Acl “$env:ProgramData\\ssh\\ssh_host_rsa_key” | Set-Acl $authorizedKeyFilePath\r\n```\r\n\r\nFinally, restart the SSH server using this command.\r\n```bash\r\nRestart-Service -Name sshd\r\n```\r\nCongrats! Your SSH server is now set up and ready to be accessed!\r\n\r\n### If the user is in the 'Administrator' group:\r\nUncomment the following line in the sshd_config file.\r\n```bash\r\nMatch Group administrators\r\n\tAuthorizedKeysFile __PROGRAMDATA__/ssh/administrators_authorized_keys\r\n```\r\n\r\nThe ```administrators_authorized_keys``` file must be created, as it doesn't exist by default. Run these commands back in the PowerShell terminal to create and open this file.\r\n```bash\r\n$authorizedKeyFilePath = “$env:ProgramData\\ssh\\administrators_authorized_keys”\r\nNew-Item $authorizedKeyFilePath\r\nnotepad.exe $authorizedKeyFilePath\r\n```\r\n\r\nPaste the public key you want to use into this file. Save and close this file. Next, make sure the file has the correct permissions. Only the system account should be able to access it. Do this by running these commands.\r\n```bash\r\nicacls.exe $authorizedKeyFilePath /remove “NT AUTHORITY\\Authenticated Users”\r\nicacls.exe $authorizedKeyFilePath /inheritance:r\r\nGet-Acl “$env:ProgramData\\ssh\\ssh_host_rsa_key” | Set-Acl $authorizedKeyFilePath\r\n```\r\n\r\nFinally, restart the SSH server using this command.\r\n```bash\r\nRestart-Service -Name sshd\r\n```\r\n\r\nCongrats! Your SSH server is now set up and ready to be accessed!\r\n\r\n---\r\nSources Used:\r\n\r\n\u003Ca href=\"https://gist.github.com/teocci/5a96568ab9bf93a592d7a1a237ebb6ea\" target=\"_blank\" rel=\"noopener noreferrer\">teocci's GitHub Gist\u003C/a> | \u003Ca href=\"https://dev.to/rkttu/set-up-an-ssh-server-in-windows-10-native-way-22d9\" target=\"_blank\" rel=\"noopener noreferrer\">Jeong Hyun Nam's DEV Blog Post\u003C/a> | \u003Ca href=\"https://learn.microsoft.com/en-us/windows-server/administration/openssh/openssh_install_firstuse?tabs=powershell&pivots=windows-server-2022\" target=\"_blank\" rel=\"noopener noreferrer\">Official Microsoft OpenSSH \"Getting Started\" Page\u003C/a>","src/content/blog/Projects/ssh-server.md","936af5cc8e8a0e8f",{"html":340,"metadata":341},"\u003Ch1 id=\"setting-up-an-openssh-server-on-windows-11\">Setting up an OpenSSH Server on Windows 11\u003C/h1>\n\u003Cp>\u003Cstrong>Motivation:\u003C/strong> I recently bought a new PC and wanted to set it up as a SSH server, so I could ssh into it from my laptop. However, I found it difficult to find the resources to setup/debug the server. I am writing this blog as a one-stop tutorial to help people set up their OpenSSH servers on Windows 11.\u003C/p>\n\u003Ch2 id=\"step-1-installation\">Step 1: Installation\u003C/h2>\n\u003Cp>Install the OpenSSH server using PowerShell by running PowerShell as an administrator and running the following command.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">Add-WindowsCapability\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -Online\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -Name\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> OpenSSH.Server\u003C/span>\u003Cspan style=\"color:#79B8FF\">*\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Confirm the installation by running the following command.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">Get-WindowsCapability\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -Online\u003C/span>\u003Cspan style=\"color:#F97583\"> |\u003C/span>\u003Cspan style=\"color:#B392F0\"> ?\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> Name\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -like\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'OpenSSH.Server*'\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>If the output looks like this, the OpenSSH server is installed.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">PS\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> C:\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\W\u003C/span>\u003Cspan style=\"color:#9ECBFF\">INDOWS\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\s\u003C/span>\u003Cspan style=\"color:#9ECBFF\">ystem3\u003C/span>\u003Cspan style=\"color:#F97583\">2>\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> Get-WindowsCapability\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -Online\u003C/span>\u003Cspan style=\"color:#F97583\"> |\u003C/span>\u003Cspan style=\"color:#B392F0\"> ?\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> Name\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -like\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'OpenSSH.Server*'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">Name\u003C/span>\u003Cspan style=\"color:#9ECBFF\">  :\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> OpenSSH.Server~~~~0.0.1.0\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">State\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> :\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> Installed\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"step-2-configuration\">Step 2: Configuration\u003C/h2>\n\u003Cp>First, check the status of the SSH server service by running the following command.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">Get-Service\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -Name\u003C/span>\u003Cspan style=\"color:#79B8FF\"> *\u003C/span>\u003Cspan style=\"color:#9ECBFF\">ssh\u003C/span>\u003Cspan style=\"color:#79B8FF\">*\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>The output should look like this. If the SSH agent is also installed, it will also appear here.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">PS\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> C:\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\W\u003C/span>\u003Cspan style=\"color:#9ECBFF\">INDOWS\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\s\u003C/span>\u003Cspan style=\"color:#9ECBFF\">ystem3\u003C/span>\u003Cspan style=\"color:#F97583\">2>\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> Get-Service\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -Name\u003C/span>\u003Cspan style=\"color:#79B8FF\"> *\u003C/span>\u003Cspan style=\"color:#9ECBFF\">ssh\u003C/span>\u003Cspan style=\"color:#79B8FF\">*\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">Status\u003C/span>\u003Cspan style=\"color:#9ECBFF\">   Name\u003C/span>\u003Cspan style=\"color:#9ECBFF\">               DisplayName\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">------\u003C/span>\u003Cspan style=\"color:#79B8FF\">   ----\u003C/span>\u003Cspan style=\"color:#79B8FF\">               -----------\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">Stopped\u003C/span>\u003Cspan style=\"color:#9ECBFF\">  ssh-agent\u003C/span>\u003Cspan style=\"color:#9ECBFF\">          OpenSSH\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> Authentication\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> Agent\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">Stopped\u003C/span>\u003Cspan style=\"color:#9ECBFF\">  sshd\u003C/span>\u003Cspan style=\"color:#9ECBFF\">               OpenSSH\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> SSH\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> Server\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>For convenience, set the sshd service to the automatically start. Then, start the service. Do this by running these commands.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">Set-Service\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -Name\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> sshd\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -StartupType\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'Automatic'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">Start-Service\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> sshd\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Finally, add a firewall rule to allow SSH traffic through port 22.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">New-NetFirewallRule\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -Name\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> sshd\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -DisplayName\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'OpenSSH Server (sshd)'\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -Enabled\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> True\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -Direction\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> Inbound\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -Protocol\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> TCP\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -Action\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> Allow\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -LocalPort\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 22\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"optional-but-recommended-step-3-switch-from-cmd-to-powershell\">(Optional, but Recommended) Step 3: Switch from CMD to PowerShell\u003C/h2>\n\u003Cp>The default terminal for a SSH server is the CMD. To switch it to PowerShell, run the following command.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">New-ItemProperty\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -Path\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"HKLM:\\SOFTWARE\\OpenSSH\"\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -Name\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> DefaultShell\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -Value\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\"\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -PropertyType\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> String\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -Force\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"optional-but-recommended-step-4-configure-key-based-authorization\">(Optional, but Recommended) Step 4: Configure Key Based Authorization\u003C/h2>\n\u003Cp>Personally, I use my Yubikey 5 to authenitcate into my SSH server. To make this possible we need to do a few things. Start by opening the server configuration file by running the following command.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">notepad.exe\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $env\u003C/span>\u003Cspan style=\"color:#9ECBFF\">:PROGRAMDATA\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\s\u003C/span>\u003Cspan style=\"color:#9ECBFF\">sh\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\s\u003C/span>\u003Cspan style=\"color:#9ECBFF\">shd_config\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>To disable password authenication and enable key-based authenication, uncomment the following settings and set them as follows.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>PubkeyAuthentication yes\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>PasswordAuthentication no\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>PermitEmptyPasswords no\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"if-the-user-is-not-in-the-administrator-group\">If the user is NOT in the ‘Administrator’ group:\u003C/h3>\n\u003Cp>Uncomment the following line in the sshd_config file.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">AuthorizedKeysFile\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\t.ssh/authorized_keys\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>The \u003Ccode>.ssh\u003C/code> folder and \u003Ccode>authorized_keys\u003C/code> file must be created, as they don’t exist by default. Run these commands back in the PowerShell terminal to create these and open the file.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">mkdir\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">$HOME\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\\.ssh\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$authorizedKeyFilePath = “$HOME\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\.\u003C/span>\u003Cspan style=\"color:#E1E4E8\">ssh\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\a\u003C/span>\u003Cspan style=\"color:#E1E4E8\">uthorized_keys”\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">New-Item\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $authorizedKeyFilePath\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">notepad.exe\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $authorizedKeyFilePath\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Paste the public key you want to use into this file. Save and close this file. Next, make sure the file has the correct permissions. Only the system account should be able to access it. Do this by running these commands.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">icacls.exe\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $authorizedKeyFilePath \u003C/span>\u003Cspan style=\"color:#9ECBFF\">/remove\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> “NT\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> AUTHORITY\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\A\u003C/span>\u003Cspan style=\"color:#9ECBFF\">uthenticated\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> Users”\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">icacls.exe\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $authorizedKeyFilePath \u003C/span>\u003Cspan style=\"color:#9ECBFF\">/inheritance:r\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">Get-Acl\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> “\u003C/span>\u003Cspan style=\"color:#E1E4E8\">$env\u003C/span>\u003Cspan style=\"color:#9ECBFF\">:ProgramData\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\s\u003C/span>\u003Cspan style=\"color:#9ECBFF\">sh\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\s\u003C/span>\u003Cspan style=\"color:#9ECBFF\">sh_host_rsa_key”\u003C/span>\u003Cspan style=\"color:#F97583\"> |\u003C/span>\u003Cspan style=\"color:#B392F0\"> Set-Acl\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $authorizedKeyFilePath\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Finally, restart the SSH server using this command.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">Restart-Service\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -Name\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> sshd\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Congrats! Your SSH server is now set up and ready to be accessed!\u003C/p>\n\u003Ch3 id=\"if-the-user-is-in-the-administrator-group\">If the user is in the ‘Administrator’ group:\u003C/h3>\n\u003Cp>Uncomment the following line in the sshd_config file.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">Match\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> Group\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> administrators\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">\tAuthorizedKeysFile\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> __PROGRAMDATA__/ssh/administrators_authorized_keys\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>The \u003Ccode>administrators_authorized_keys\u003C/code> file must be created, as it doesn’t exist by default. Run these commands back in the PowerShell terminal to create and open this file.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$authorizedKeyFilePath = “$env:ProgramData\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\s\u003C/span>\u003Cspan style=\"color:#E1E4E8\">sh\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\a\u003C/span>\u003Cspan style=\"color:#E1E4E8\">dministrators_authorized_keys”\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">New-Item\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $authorizedKeyFilePath\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">notepad.exe\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $authorizedKeyFilePath\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Paste the public key you want to use into this file. Save and close this file. Next, make sure the file has the correct permissions. Only the system account should be able to access it. Do this by running these commands.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">icacls.exe\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $authorizedKeyFilePath \u003C/span>\u003Cspan style=\"color:#9ECBFF\">/remove\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> “NT\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> AUTHORITY\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\A\u003C/span>\u003Cspan style=\"color:#9ECBFF\">uthenticated\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> Users”\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">icacls.exe\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $authorizedKeyFilePath \u003C/span>\u003Cspan style=\"color:#9ECBFF\">/inheritance:r\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">Get-Acl\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> “\u003C/span>\u003Cspan style=\"color:#E1E4E8\">$env\u003C/span>\u003Cspan style=\"color:#9ECBFF\">:ProgramData\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\s\u003C/span>\u003Cspan style=\"color:#9ECBFF\">sh\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\s\u003C/span>\u003Cspan style=\"color:#9ECBFF\">sh_host_rsa_key”\u003C/span>\u003Cspan style=\"color:#F97583\"> |\u003C/span>\u003Cspan style=\"color:#B392F0\"> Set-Acl\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $authorizedKeyFilePath\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Finally, restart the SSH server using this command.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">Restart-Service\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -Name\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> sshd\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Congrats! Your SSH server is now set up and ready to be accessed!\u003C/p>\n\u003Chr>\n\u003Cp>Sources Used:\u003C/p>\n\u003Cp>\u003Ca href=\"https://gist.github.com/teocci/5a96568ab9bf93a592d7a1a237ebb6ea\" target=\"_blank\" rel=\"noopener noreferrer\">teocci’s GitHub Gist\u003C/a> | \u003Ca href=\"https://dev.to/rkttu/set-up-an-ssh-server-in-windows-10-native-way-22d9\" target=\"_blank\" rel=\"noopener noreferrer\">Jeong Hyun Nam’s DEV Blog Post\u003C/a> | \u003Ca href=\"https://learn.microsoft.com/en-us/windows-server/administration/openssh/openssh_install_firstuse?tabs=powershell&#x26;pivots=windows-server-2022\" target=\"_blank\" rel=\"noopener noreferrer\">Official Microsoft OpenSSH “Getting Started” Page\u003C/a>\u003C/p>",{"headings":342,"localImagePaths":364,"remoteImagePaths":365,"frontmatter":366,"imagePaths":368},[343,346,349,352,355,358,361],{"depth":45,"slug":344,"text":345},"setting-up-an-openssh-server-on-windows-11","Setting up an OpenSSH Server on Windows 11",{"depth":49,"slug":347,"text":348},"step-1-installation","Step 1: Installation",{"depth":49,"slug":350,"text":351},"step-2-configuration","Step 2: Configuration",{"depth":49,"slug":353,"text":354},"optional-but-recommended-step-3-switch-from-cmd-to-powershell","(Optional, but Recommended) Step 3: Switch from CMD to PowerShell",{"depth":49,"slug":356,"text":357},"optional-but-recommended-step-4-configure-key-based-authorization","(Optional, but Recommended) Step 4: Configure Key Based Authorization",{"depth":53,"slug":359,"text":360},"if-the-user-is-not-in-the-administrator-group","If the user is NOT in the ‘Administrator’ group:",{"depth":53,"slug":362,"text":363},"if-the-user-is-in-the-administrator-group","If the user is in the ‘Administrator’ group:",[],[],{"title":330,"description":331,"pubDate":332,"image":333,"skills":367},[335],[],"Projects/ssh-server.md","projects/matching-engine",{"id":370,"data":372,"body":378,"filePath":379,"digest":380,"rendered":381,"legacyId":399},{"title":373,"description":374,"pubDate":375,"image":376,"skills":377},"Event-Driven Order Matching Engine","I developed a low-latency matching engine in C++ and created Python bindings for this engine. The next steps are to build an interactive web-based interface, making it accessible for users to experiment with, visualize order flows, and simulate market scenarios in real-time.","Jun 4, 2025","/images/previews/orderbook.png",[175,112],"# Event-Driven Order Matching Engine\r\n## Overview\r\n\u003Cstrong>Motivation:\u003C/strong> This project was inspired by a topic I learned about in IE 421 - High Frequency Trading Technology at the University of Illinois at Urbana-Champaign.\r\n\r\n\u003Cstrong>Tech Stack:\u003C/strong> C++, Python\r\n\r\nThe end goal for this project is to create a web app to help users learning about trading, orderbooks and matching engines. I have already implemented the matching engine in C++ and have written Python bindings, which means I can now use the engine as a Python module that calls the C++ code. The next steps are to create a scalable backend and frontend.\r\n\r\n\u003Cstrong>Source Code: \u003C/strong> \u003C/strong>\u003Ca href=\"https://github.com/Krish-Gandhi/EventDrivenOrderMatchingEngine\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub Repository\u003C/a>\r\n\r\n---\r\n\r\n### Matching Engine Features\r\n\r\n- \u003Cstrong>Multiple Order Types\u003C/strong> - The engine currently supports market orders, limit orders, stop orders, stop-limit orders, and Fill-Or-Kill market orders.                                        \r\n- \u003Cstrong>Summary of Transaction\u003C/strong> - The engine also provides a summary of each transaction.\r\n- \u003Cstrong>Order Visibility\u003C/strong> - The engine supports orders with \"public\" or \"hidden\" visibility and correctly sorts them in the order book.\r\n\r\n### Next Steps\r\n\r\nThe immediate next steps of this project are:\r\n- Implement the Python module into a web app.\r\n- Implement a database (probably Redis for its low-latency) into the web app, so all users can see and make orders to the same order book.\r\n- Deploy the web app.\r\n- Go back and optimize the model","src/content/blog/Projects/matching-engine.md","1e81abc4e370fdeb",{"html":382,"metadata":383},"\u003Ch1 id=\"event-driven-order-matching-engine\">Event-Driven Order Matching Engine\u003C/h1>\n\u003Ch2 id=\"overview\">Overview\u003C/h2>\n\u003Cp>\u003Cstrong>Motivation:\u003C/strong> This project was inspired by a topic I learned about in IE 421 - High Frequency Trading Technology at the University of Illinois at Urbana-Champaign.\u003C/p>\n\u003Cp>\u003Cstrong>Tech Stack:\u003C/strong> C++, Python\u003C/p>\n\u003Cp>The end goal for this project is to create a web app to help users learning about trading, orderbooks and matching engines. I have already implemented the matching engine in C++ and have written Python bindings, which means I can now use the engine as a Python module that calls the C++ code. The next steps are to create a scalable backend and frontend.\u003C/p>\n\u003Cp>\u003Cstrong>Source Code: \u003C/strong> \u003Ca href=\"https://github.com/Krish-Gandhi/EventDrivenOrderMatchingEngine\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub Repository\u003C/a>\u003C/p>\n\u003Chr>\n\u003Ch3 id=\"matching-engine-features\">Matching Engine Features\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Cstrong>Multiple Order Types\u003C/strong> - The engine currently supports market orders, limit orders, stop orders, stop-limit orders, and Fill-Or-Kill market orders.\u003C/li>\n\u003Cli>\u003Cstrong>Summary of Transaction\u003C/strong> - The engine also provides a summary of each transaction.\u003C/li>\n\u003Cli>\u003Cstrong>Order Visibility\u003C/strong> - The engine supports orders with “public” or “hidden” visibility and correctly sorts them in the order book.\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"next-steps\">Next Steps\u003C/h3>\n\u003Cp>The immediate next steps of this project are:\u003C/p>\n\u003Cul>\n\u003Cli>Implement the Python module into a web app.\u003C/li>\n\u003Cli>Implement a database (probably Redis for its low-latency) into the web app, so all users can see and make orders to the same order book.\u003C/li>\n\u003Cli>Deploy the web app.\u003C/li>\n\u003Cli>Go back and optimize the model\u003C/li>\n\u003C/ul>",{"headings":384,"localImagePaths":394,"remoteImagePaths":395,"frontmatter":396,"imagePaths":398},[385,387,388,391],{"depth":45,"slug":386,"text":373},"event-driven-order-matching-engine",{"depth":49,"slug":50,"text":51},{"depth":53,"slug":389,"text":390},"matching-engine-features","Matching Engine Features",{"depth":53,"slug":392,"text":393},"next-steps","Next Steps",[],[],{"title":373,"description":374,"pubDate":375,"image":376,"skills":397},[175,112],[],"Projects/matching-engine.md","developer-tools/engagement",{"id":400,"data":402,"body":408,"filePath":409,"digest":410,"rendered":411,"legacyId":423},{"title":403,"description":404,"pubDate":405,"image":406,"skills":407},"Engagement","See the views for each blog page!","Jan 2, 2000","/images/previews/engagement.png",[],"# Engagement by Page","src/content/blog/Developer Tools/engagement.md","228ae4ce97771327",{"html":412,"metadata":413},"\u003Ch1 id=\"engagement-by-page\">Engagement by Page\u003C/h1>",{"headings":414,"localImagePaths":418,"remoteImagePaths":419,"frontmatter":420,"imagePaths":422},[415],{"depth":45,"slug":416,"text":417},"engagement-by-page","Engagement by Page",[],[],{"title":403,"description":404,"pubDate":405,"image":406,"skills":421},[],[],"Developer Tools/engagement.md","developer-tools/suggestions",{"id":424,"data":426,"body":430,"filePath":431,"digest":432,"rendered":433,"legacyId":445},{"title":427,"description":428,"pubDate":34,"image":406,"skills":429},"Suggest A Project","Want to request me to do a project? Use this form!",[],"# Suggest a Project for Me!\r\n\r\nIf you are a recruiter or a person in industry and you are interested in hiring me (or even if you just have a project idea for me), but you feel like there is a gap or two in my portfolio/resume, leave a suggestion for a project for me to build! If I complete your project, I will be sure to reach out and let you know! Be specific as you want on the tech stack and details.\r\n\r\nI am a hardworker and a quick learner, so feel free to make the project as challenging as you want and include any technologies you are looking for, even if I don't have any experience with them. Thanks!\r\n\r\n\u003Cform id=\"suggestion-form\" onsubmit=\"submitForm(event)\">\r\n  \u003Clabel>\r\n    Name:\r\n    \u003Cinput type=\"text\" name=\"name\" required />\r\n  \u003C/label>\u003Cbr>\r\n\r\n  \u003Clabel>\r\n    Company:\r\n    \u003Cinput type=\"text\" name=\"company\" required />\r\n  \u003C/label>\u003Cbr>\r\n\r\n  \u003Clabel>\r\n    Email:\r\n    \u003Cinput type=\"text\" name=\"email\" required />\r\n  \u003C/label>\u003Cbr>\r\n\r\n  \u003Clabel>\r\n    Title:\r\n    \u003Cinput type=\"text\" name=\"title\" required />\r\n  \u003C/label>\u003Cbr>\r\n\r\n  \u003Clabel>\r\n    Project Request:\r\n    \u003Ctextarea name=\"request\" rows=\"4\" required>\u003C/textarea>\r\n  \u003C/label>\u003Cbr>\r\n\r\n  \u003Cbutton type=\"submit\">Send Suggestion\u003C/button>\r\n  \u003Cp id=\"response-message\" style=\"margin-top: 10px;\">\u003C/p>\r\n\u003C/form>","src/content/blog/Developer Tools/suggestions.md","447ab5157e69dd2b",{"html":434,"metadata":435},"\u003Ch1 id=\"suggest-a-project-for-me\">Suggest a Project for Me!\u003C/h1>\n\u003Cp>If you are a recruiter or a person in industry and you are interested in hiring me (or even if you just have a project idea for me), but you feel like there is a gap or two in my portfolio/resume, leave a suggestion for a project for me to build! If I complete your project, I will be sure to reach out and let you know! Be specific as you want on the tech stack and details.\u003C/p>\n\u003Cp>I am a hardworker and a quick learner, so feel free to make the project as challenging as you want and include any technologies you are looking for, even if I don’t have any experience with them. Thanks!\u003C/p>\n\u003Cform id=\"suggestion-form\" onsubmit=\"submitForm(event)\">\n  \u003Clabel>\n    Name:\n    \u003Cinput type=\"text\" name=\"name\" required>\n  \u003C/label>\u003Cbr>\n  \u003Clabel>\n    Company:\n    \u003Cinput type=\"text\" name=\"company\" required>\n  \u003C/label>\u003Cbr>\n  \u003Clabel>\n    Email:\n    \u003Cinput type=\"text\" name=\"email\" required>\n  \u003C/label>\u003Cbr>\n  \u003Clabel>\n    Title:\n    \u003Cinput type=\"text\" name=\"title\" required>\n  \u003C/label>\u003Cbr>\n  \u003Clabel>\n    Project Request:\n    \u003Ctextarea name=\"request\" rows=\"4\" required>\u003C/textarea>\n  \u003C/label>\u003Cbr>\n\u003Cp>\u003Cbutton type=\"submit\">Send Suggestion\u003C/button>\u003C/p>\n  \u003Cp id=\"response-message\" style=\"margin-top: 10px;\">\u003C/p>\n\u003C/form>",{"headings":436,"localImagePaths":440,"remoteImagePaths":441,"frontmatter":442,"imagePaths":444},[437],{"depth":45,"slug":438,"text":439},"suggest-a-project-for-me","Suggest a Project for Me!",[],[],{"title":427,"description":428,"pubDate":34,"image":406,"skills":443},[],[],"Developer Tools/suggestions.md"]