[["Map",1,2,9,10],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.9.2","content-config-digest","f5064da06edf327d","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"static\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":true,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true,\"allowedHosts\":[]},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[],\"experimentalDefaultStyles\":true},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":{\"type\":\"shiki\",\"excludeLangs\":[\"math\"]},\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[],\"rehypePlugins\":[],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"responsiveImages\":false,\"headingIdCompat\":false,\"preserveScriptOrder\":false,\"csp\":false},\"legacy\":{\"collections\":false}}","blog",["Map",11,12,51,52,73,74,116,117,148,149,178,179],"projects/virtualwhiteboard",{"id":11,"data":13,"body":21,"filePath":22,"digest":23,"rendered":24,"legacyId":50},{"title":14,"description":15,"pubDate":16,"image":17,"skills":18},"Virtual Whiteboard","Utilizing OpenCV and Google's Mediapipe, I build an application that uses the user's device's camera. This program can track the user's hand(s) and use them to control the screen like a whiteboard.","May 16, 2024","/images/previews/virtualWhiteboard.png",[19,20],"Python","AI/ML","# Virtual Whiteboard\r\n## Overview\r\n\u003Cstrong>Inspiration:\u003C/strong> The idea for this project came to me while I was on a video call. I was trying to explain how to do a Fourier transform to a friend and I tried to use a dry erase whiteboard to show them how I solved it. I quickly realized that the glare was too much and my writing was to small to be visible on the camera. I decided this would be a fun solution. This was also vaguely inspired from a video I remember seeing when I was young about Pranav Mistry's SixthSense.\r\n\r\n\u003Cstrong>Tech Stack:\u003C/strong> Python (OpenCV, Mediapipe, numpy)\r\n\r\nThis program utilizes your device's camera to mimic a digital whiteboard. When running, the user can fully control the program thru their device's camera by putting their hands in view of the camera and making certain gestures. For optimal hand detection, when trying to perform a gesture, try to have your entire hand in frame with your palm directly facing the camera. Performance is limited by your device's performance because this program runs frame by frame. As a result, lines may not appear continuous if you move your hands too fast. For optimal results, move your hand slowly to match your device's FPS.\r\n\r\n\u003Cstrong>Source Code: \u003C/strong>\u003Ca href=\"https://github.com/Krish-Gandhi/VirtualWhiteboard\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub Repository\u003C/a>\r\n\r\n\u003Cvideo width=\"560\" height=\"420\" controls>\r\n    \u003Csource src=\"path/to/your/video.mp4\" type=\"video/mp4\">\r\n    Your browser does not support the video tag.\r\n\u003C/video>\r\nNOTE: There is no demo video yet, check back soon!\r\n\u003Chr/>\r\n\r\n### Features\r\n\r\n\u003Cul>\r\n    \u003Cli>\u003Cstrong>Hand Movement/Position Tracking\u003C/strong> - Utilizing Mediapipe and OpenCV, I was able to\r\n        use the user's device's camera to track the user's hands. \r\n    \u003C/li>\r\n    \u003Cli>\u003Cstrong>Draw\u003C/strong> - When the user touches their thumb and pointer fingers, \r\n        the thumb landmark will turn blue. The thumb landmark will then leave a blue dot\r\n        wherever it does.\r\n    \u003C/li>\r\n    \u003Cli>\u003Cstrong>Erase\u003C/strong> - When the user touches their thumb and pinky fingers,\r\n        the thumb landmark will turn green and a countdown will begin. If the countdown\r\n        reaches zero, all drawn dots will be erased.\r\n    \u003C/li>\r\n    \u003Cli>\u003Cstrong>Exit\u003C/strong> - When the user touches their thumb and ring fingers,\r\n        the thumb landmark will turn red and a countdown will begin. If the countdown\r\n        reaches zero, the program will close.\r\n    \u003C/li>\r\n\u003C/ul>\r\n\r\n### Design Decisions\r\nI decided to make the thumb the center of all functionality because every other finger easily accessible to it. Thumb and the pointer finger have to be closer together to trigger the Draw functionalty than the thumb/pinky or thumb/ring finger have to be to trigger the Exit or Erase functionality. This was done on purpose to prevent any accidental drawing. The Erase and Exit features are triggered by a timer for this same reason, to prevent accidental erasing or exitting.\r\n\r\n### Possible Future Updates\r\n\r\n\u003Cul>\r\n    \u003Cli>\u003Cstrong>Undo\u003C/strong> - Undo the previous draw\u003C/li>\r\n    \u003Cli>\u003Cstrong>Change Draw Color\u003C/strong> - Change the color for future drawing\u003C/li>\r\n    \u003Cli>\u003Cstrong>Change Draw Radius\u003C/strong> - Change the radius of future dots drawn\u003C/li>\r\n\u003C/ul>","src/content/blog/Projects/virtualWhiteboard.md","d83aad152ddea718",{"html":25,"metadata":26},"\u003Ch1 id=\"virtual-whiteboard\">Virtual Whiteboard\u003C/h1>\n\u003Ch2 id=\"overview\">Overview\u003C/h2>\n\u003Cp>\u003Cstrong>Inspiration:\u003C/strong> The idea for this project came to me while I was on a video call. I was trying to explain how to do a Fourier transform to a friend and I tried to use a dry erase whiteboard to show them how I solved it. I quickly realized that the glare was too much and my writing was to small to be visible on the camera. I decided this would be a fun solution. This was also vaguely inspired from a video I remember seeing when I was young about Pranav Mistry’s SixthSense.\u003C/p>\n\u003Cp>\u003Cstrong>Tech Stack:\u003C/strong> Python (OpenCV, Mediapipe, numpy)\u003C/p>\n\u003Cp>This program utilizes your device’s camera to mimic a digital whiteboard. When running, the user can fully control the program thru their device’s camera by putting their hands in view of the camera and making certain gestures. For optimal hand detection, when trying to perform a gesture, try to have your entire hand in frame with your palm directly facing the camera. Performance is limited by your device’s performance because this program runs frame by frame. As a result, lines may not appear continuous if you move your hands too fast. For optimal results, move your hand slowly to match your device’s FPS.\u003C/p>\n\u003Cp>\u003Cstrong>Source Code: \u003C/strong>\u003Ca href=\"https://github.com/Krish-Gandhi/VirtualWhiteboard\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub Repository\u003C/a>\u003C/p>\n\u003Cvideo width=\"560\" height=\"420\" controls>\n    \u003Csource src=\"path/to/your/video.mp4\" type=\"video/mp4\">\n    Your browser does not support the video tag.\n\u003C/video>\nNOTE: There is no demo video yet, check back soon!\n\u003Chr>\n\u003Ch3 id=\"features\">Features\u003C/h3>\n\u003Cul>\n    \u003Cli>\u003Cstrong>Hand Movement/Position Tracking\u003C/strong> - Utilizing Mediapipe and OpenCV, I was able to\n        use the user's device's camera to track the user's hands. \n    \u003C/li>\n    \u003Cli>\u003Cstrong>Draw\u003C/strong> - When the user touches their thumb and pointer fingers, \n        the thumb landmark will turn blue. The thumb landmark will then leave a blue dot\n        wherever it does.\n    \u003C/li>\n    \u003Cli>\u003Cstrong>Erase\u003C/strong> - When the user touches their thumb and pinky fingers,\n        the thumb landmark will turn green and a countdown will begin. If the countdown\n        reaches zero, all drawn dots will be erased.\n    \u003C/li>\n    \u003Cli>\u003Cstrong>Exit\u003C/strong> - When the user touches their thumb and ring fingers,\n        the thumb landmark will turn red and a countdown will begin. If the countdown\n        reaches zero, the program will close.\n    \u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"design-decisions\">Design Decisions\u003C/h3>\n\u003Cp>I decided to make the thumb the center of all functionality because every other finger easily accessible to it. Thumb and the pointer finger have to be closer together to trigger the Draw functionalty than the thumb/pinky or thumb/ring finger have to be to trigger the Exit or Erase functionality. This was done on purpose to prevent any accidental drawing. The Erase and Exit features are triggered by a timer for this same reason, to prevent accidental erasing or exitting.\u003C/p>\n\u003Ch3 id=\"possible-future-updates\">Possible Future Updates\u003C/h3>\n\u003Cul>\n    \u003Cli>\u003Cstrong>Undo\u003C/strong> - Undo the previous draw\u003C/li>\n    \u003Cli>\u003Cstrong>Change Draw Color\u003C/strong> - Change the color for future drawing\u003C/li>\n    \u003Cli>\u003Cstrong>Change Draw Radius\u003C/strong> - Change the radius of future dots drawn\u003C/li>\n\u003C/ul>",{"headings":27,"localImagePaths":45,"remoteImagePaths":46,"frontmatter":47,"imagePaths":49},[28,31,35,39,42],{"depth":29,"slug":30,"text":14},1,"virtual-whiteboard",{"depth":32,"slug":33,"text":34},2,"overview","Overview",{"depth":36,"slug":37,"text":38},3,"features","Features",{"depth":36,"slug":40,"text":41},"design-decisions","Design Decisions",{"depth":36,"slug":43,"text":44},"possible-future-updates","Possible Future Updates",[],[],{"title":14,"description":15,"pubDate":16,"image":17,"skills":48},[19,20],[],"Projects/virtualWhiteboard.md","project-dos/virtualwhiteboard2",{"id":51,"data":53,"body":21,"filePath":58,"digest":59,"rendered":60,"legacyId":72},{"title":54,"description":55,"pubDate":56,"image":57},"Virtual Whiteboard in Proj 2","TESTING TESTING TESTING","Jan 4, 2025","/images/previews/doodleJump.png","src/content/blog/Project Dos/virtualWhiteboard2.md","90119d45d499f89c",{"html":25,"metadata":61},{"headings":62,"localImagePaths":68,"remoteImagePaths":69,"frontmatter":70,"imagePaths":71},[63,64,65,66,67],{"depth":29,"slug":30,"text":14},{"depth":32,"slug":33,"text":34},{"depth":36,"slug":37,"text":38},{"depth":36,"slug":40,"text":41},{"depth":36,"slug":43,"text":44},[],[],{"title":54,"description":55,"pubDate":56,"image":57},[],"Project Dos/virtualWhiteboard2.md","projects/sshserver",{"id":73,"data":75,"body":82,"filePath":83,"digest":84,"rendered":85,"legacyId":115},{"title":76,"description":77,"pubDate":78,"image":79,"skills":80},"OpenSSH Server on Windows 11","I recently bought a new PC running Windows 11. While trying to set it up as an SSH server, I quickly found out there isn't a centralized place for OpenSSH tutorials. This blog will serve as a step-by-step guide to setting up a OpenSSH server on Windows 11.","Jan 13, 2025","/images/previews/sshServer.png",[81],"Networking","# Setting up an OpenSSH Server on Windows 11\r\n\r\n**Motivation:** I recently bought a new PC and wanted to set it up as a SSH server, so I could ssh into it from my laptop. However, I found it difficult to find the resources to setup/debug the server. I am writing this blog as a one-stop tutorial to help people set up their OpenSSH servers on Windows 11.\r\n\r\n## Step 1: Installation\r\n\r\nInstall the OpenSSH server using PowerShell by running PowerShell as an administrator and running the following command.\r\n```bash\r\nAdd-WindowsCapability -Online -Name OpenSSH.Server*\r\n```\r\n\r\nConfirm the installation by running the following command.\r\n```bash\r\nGet-WindowsCapability -Online | ? Name -like 'OpenSSH.Server*'\r\n```\r\n\r\nIf the output looks like this, the OpenSSH server is installed.\r\n```bash\r\nPS C:\\WINDOWS\\system32> Get-WindowsCapability -Online | ? Name -like 'OpenSSH.Server*'\r\n\r\n\r\nName  : OpenSSH.Server~~~~0.0.1.0\r\nState : Installed\r\n```\r\n\r\n## Step 2: Configuration\r\nFirst, check the status of the SSH server service by running the following command.\r\n```bash\r\nGet-Service -Name *ssh*\r\n```\r\n\r\nThe output should look like this. If the SSH agent is also installed, it will also appear here.\r\n```bash\r\nPS C:\\WINDOWS\\system32> Get-Service -Name *ssh*\r\n\r\nStatus   Name               DisplayName\r\n------   ----               -----------\r\nStopped  ssh-agent          OpenSSH Authentication Agent\r\nStopped  sshd               OpenSSH SSH Server\r\n```\r\n\r\nFor convenience, set the sshd service to the automatically start. Then, start the service. Do this by running these commands.\r\n```bash\r\nSet-Service -Name sshd -StartupType 'Automatic'\r\nStart-Service sshd\r\n```\r\n\r\nFinally, add a firewall rule to allow SSH traffic through port 22.\r\n```bash\r\nNew-NetFirewallRule -Name sshd -DisplayName 'OpenSSH Server (sshd)' -Enabled True -Direction Inbound -Protocol TCP -Action Allow -LocalPort 22\r\n```\r\n\r\n## (Optional, but Recommended) Step 3: Switch from CMD to PowerShell\r\nThe default terminal for a SSH server is the CMD. To switch it to PowerShell, run the following command.\r\n```bash\r\nNew-ItemProperty -Path \"HKLM:\\SOFTWARE\\OpenSSH\" -Name DefaultShell -Value \"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\" -PropertyType String -Force\r\n```\r\n\r\n## (Optional, but Recommended) Step 4: Configure Key Based Authorization\r\n\r\nPersonally, I use my Yubikey 5 to authenitcate into my SSH server. To make this possible we need to do a few things. Start by opening the server configuration file by running the following command.\r\n```bash\r\nnotepad.exe $env:PROGRAMDATA\\ssh\\sshd_config\r\n```\r\n\r\nTo disable password authenication and enable key-based authenication, uncomment the following settings and set them as follows.\r\n```\r\nPubkeyAuthentication yes\r\nPasswordAuthentication no\r\nPermitEmptyPasswords no\r\n```\r\n\r\n### If the user is NOT in the 'Administrator' group:\r\nUncomment the following line in the sshd_config file.\r\n```bash\r\nAuthorizedKeysFile\t.ssh/authorized_keys\r\n```\r\n\r\nThe ```.ssh``` folder and ```authorized_keys``` file must be created, as they don't exist by default. Run these commands back in the PowerShell terminal to create these and open the file.\r\n```bash\r\nmkdir \"$HOME\\.ssh\"\r\n$authorizedKeyFilePath = “$HOME\\.ssh\\authorized_keys”\r\nNew-Item $authorizedKeyFilePath\r\nnotepad.exe $authorizedKeyFilePath\r\n```\r\n\r\nPaste the public key you want to use into this file. Save and close this file. Next, make sure the file has the correct permissions. Only the system account should be able to access it. Do this by running these commands.\r\n\r\n```bash\r\nicacls.exe $authorizedKeyFilePath /remove “NT AUTHORITY\\Authenticated Users”\r\nicacls.exe $authorizedKeyFilePath /inheritance:r\r\nGet-Acl “$env:ProgramData\\ssh\\ssh_host_rsa_key” | Set-Acl $authorizedKeyFilePath\r\n```\r\n\r\nFinally, restart the SSH server using this command.\r\n```bash\r\nRestart-Service -Name sshd\r\n```\r\nCongrats! Your SSH server is now set up and ready to be accessed!\r\n\r\n### If the user is in the 'Administrator' group:\r\nUncomment the following line in the sshd_config file.\r\n```bash\r\nMatch Group administrators\r\n\tAuthorizedKeysFile __PROGRAMDATA__/ssh/administrators_authorized_keys\r\n```\r\n\r\nThe ```administrators_authorized_keys``` file must be created, as it doesn't exist by default. Run these commands back in the PowerShell terminal to create and open this file.\r\n```bash\r\n$authorizedKeyFilePath = “$env:ProgramData\\ssh\\administrators_authorized_keys”\r\nNew-Item $authorizedKeyFilePath\r\nnotepad.exe $authorizedKeyFilePath\r\n```\r\n\r\nPaste the public key you want to use into this file. Save and close this file. Next, make sure the file has the correct permissions. Only the system account should be able to access it. Do this by running these commands.\r\n```bash\r\nicacls.exe $authorizedKeyFilePath /remove “NT AUTHORITY\\Authenticated Users”\r\nicacls.exe $authorizedKeyFilePath /inheritance:r\r\nGet-Acl “$env:ProgramData\\ssh\\ssh_host_rsa_key” | Set-Acl $authorizedKeyFilePath\r\n```\r\n\r\nFinally, restart the SSH server using this command.\r\n```bash\r\nRestart-Service -Name sshd\r\n```\r\n\r\nCongrats! Your SSH server is now set up and ready to be accessed!\r\n\r\n---\r\nSources Used:\r\n\r\n\u003Ca href=\"https://gist.github.com/teocci/5a96568ab9bf93a592d7a1a237ebb6ea\" target=\"_blank\" rel=\"noopener noreferrer\">teocci's GitHub Gist\u003C/a> | \u003Ca href=\"https://dev.to/rkttu/set-up-an-ssh-server-in-windows-10-native-way-22d9\" target=\"_blank\" rel=\"noopener noreferrer\">Jeong Hyun Nam's DEV Blog Post\u003C/a> | \u003Ca href=\"https://learn.microsoft.com/en-us/windows-server/administration/openssh/openssh_install_firstuse?tabs=powershell&pivots=windows-server-2022\" target=\"_blank\" rel=\"noopener noreferrer\">Official Microsoft OpenSSH \"Getting Started\" Page\u003C/a>","src/content/blog/Projects/sshServer.md","936af5cc8e8a0e8f",{"html":86,"metadata":87},"\u003Ch1 id=\"setting-up-an-openssh-server-on-windows-11\">Setting up an OpenSSH Server on Windows 11\u003C/h1>\n\u003Cp>\u003Cstrong>Motivation:\u003C/strong> I recently bought a new PC and wanted to set it up as a SSH server, so I could ssh into it from my laptop. However, I found it difficult to find the resources to setup/debug the server. I am writing this blog as a one-stop tutorial to help people set up their OpenSSH servers on Windows 11.\u003C/p>\n\u003Ch2 id=\"step-1-installation\">Step 1: Installation\u003C/h2>\n\u003Cp>Install the OpenSSH server using PowerShell by running PowerShell as an administrator and running the following command.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">Add-WindowsCapability\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -Online\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -Name\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> OpenSSH.Server\u003C/span>\u003Cspan style=\"color:#79B8FF\">*\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Confirm the installation by running the following command.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">Get-WindowsCapability\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -Online\u003C/span>\u003Cspan style=\"color:#F97583\"> |\u003C/span>\u003Cspan style=\"color:#B392F0\"> ?\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> Name\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -like\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'OpenSSH.Server*'\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>If the output looks like this, the OpenSSH server is installed.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">PS\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> C:\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\W\u003C/span>\u003Cspan style=\"color:#9ECBFF\">INDOWS\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\s\u003C/span>\u003Cspan style=\"color:#9ECBFF\">ystem3\u003C/span>\u003Cspan style=\"color:#F97583\">2>\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> Get-WindowsCapability\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -Online\u003C/span>\u003Cspan style=\"color:#F97583\"> |\u003C/span>\u003Cspan style=\"color:#B392F0\"> ?\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> Name\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -like\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'OpenSSH.Server*'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">Name\u003C/span>\u003Cspan style=\"color:#9ECBFF\">  :\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> OpenSSH.Server~~~~0.0.1.0\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">State\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> :\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> Installed\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"step-2-configuration\">Step 2: Configuration\u003C/h2>\n\u003Cp>First, check the status of the SSH server service by running the following command.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">Get-Service\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -Name\u003C/span>\u003Cspan style=\"color:#79B8FF\"> *\u003C/span>\u003Cspan style=\"color:#9ECBFF\">ssh\u003C/span>\u003Cspan style=\"color:#79B8FF\">*\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>The output should look like this. If the SSH agent is also installed, it will also appear here.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">PS\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> C:\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\W\u003C/span>\u003Cspan style=\"color:#9ECBFF\">INDOWS\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\s\u003C/span>\u003Cspan style=\"color:#9ECBFF\">ystem3\u003C/span>\u003Cspan style=\"color:#F97583\">2>\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> Get-Service\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -Name\u003C/span>\u003Cspan style=\"color:#79B8FF\"> *\u003C/span>\u003Cspan style=\"color:#9ECBFF\">ssh\u003C/span>\u003Cspan style=\"color:#79B8FF\">*\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">Status\u003C/span>\u003Cspan style=\"color:#9ECBFF\">   Name\u003C/span>\u003Cspan style=\"color:#9ECBFF\">               DisplayName\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">------\u003C/span>\u003Cspan style=\"color:#79B8FF\">   ----\u003C/span>\u003Cspan style=\"color:#79B8FF\">               -----------\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">Stopped\u003C/span>\u003Cspan style=\"color:#9ECBFF\">  ssh-agent\u003C/span>\u003Cspan style=\"color:#9ECBFF\">          OpenSSH\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> Authentication\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> Agent\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">Stopped\u003C/span>\u003Cspan style=\"color:#9ECBFF\">  sshd\u003C/span>\u003Cspan style=\"color:#9ECBFF\">               OpenSSH\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> SSH\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> Server\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>For convenience, set the sshd service to the automatically start. Then, start the service. Do this by running these commands.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">Set-Service\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -Name\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> sshd\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -StartupType\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'Automatic'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">Start-Service\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> sshd\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Finally, add a firewall rule to allow SSH traffic through port 22.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">New-NetFirewallRule\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -Name\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> sshd\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -DisplayName\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'OpenSSH Server (sshd)'\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -Enabled\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> True\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -Direction\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> Inbound\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -Protocol\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> TCP\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -Action\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> Allow\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -LocalPort\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 22\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"optional-but-recommended-step-3-switch-from-cmd-to-powershell\">(Optional, but Recommended) Step 3: Switch from CMD to PowerShell\u003C/h2>\n\u003Cp>The default terminal for a SSH server is the CMD. To switch it to PowerShell, run the following command.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">New-ItemProperty\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -Path\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"HKLM:\\SOFTWARE\\OpenSSH\"\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -Name\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> DefaultShell\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -Value\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\"\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -PropertyType\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> String\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -Force\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"optional-but-recommended-step-4-configure-key-based-authorization\">(Optional, but Recommended) Step 4: Configure Key Based Authorization\u003C/h2>\n\u003Cp>Personally, I use my Yubikey 5 to authenitcate into my SSH server. To make this possible we need to do a few things. Start by opening the server configuration file by running the following command.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">notepad.exe\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $env\u003C/span>\u003Cspan style=\"color:#9ECBFF\">:PROGRAMDATA\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\s\u003C/span>\u003Cspan style=\"color:#9ECBFF\">sh\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\s\u003C/span>\u003Cspan style=\"color:#9ECBFF\">shd_config\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>To disable password authenication and enable key-based authenication, uncomment the following settings and set them as follows.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>PubkeyAuthentication yes\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>PasswordAuthentication no\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>PermitEmptyPasswords no\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"if-the-user-is-not-in-the-administrator-group\">If the user is NOT in the ‘Administrator’ group:\u003C/h3>\n\u003Cp>Uncomment the following line in the sshd_config file.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">AuthorizedKeysFile\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\t.ssh/authorized_keys\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>The \u003Ccode>.ssh\u003C/code> folder and \u003Ccode>authorized_keys\u003C/code> file must be created, as they don’t exist by default. Run these commands back in the PowerShell terminal to create these and open the file.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">mkdir\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">$HOME\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\\.ssh\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$authorizedKeyFilePath = “$HOME\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\.\u003C/span>\u003Cspan style=\"color:#E1E4E8\">ssh\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\a\u003C/span>\u003Cspan style=\"color:#E1E4E8\">uthorized_keys”\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">New-Item\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $authorizedKeyFilePath\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">notepad.exe\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $authorizedKeyFilePath\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Paste the public key you want to use into this file. Save and close this file. Next, make sure the file has the correct permissions. Only the system account should be able to access it. Do this by running these commands.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">icacls.exe\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $authorizedKeyFilePath \u003C/span>\u003Cspan style=\"color:#9ECBFF\">/remove\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> “NT\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> AUTHORITY\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\A\u003C/span>\u003Cspan style=\"color:#9ECBFF\">uthenticated\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> Users”\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">icacls.exe\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $authorizedKeyFilePath \u003C/span>\u003Cspan style=\"color:#9ECBFF\">/inheritance:r\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">Get-Acl\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> “\u003C/span>\u003Cspan style=\"color:#E1E4E8\">$env\u003C/span>\u003Cspan style=\"color:#9ECBFF\">:ProgramData\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\s\u003C/span>\u003Cspan style=\"color:#9ECBFF\">sh\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\s\u003C/span>\u003Cspan style=\"color:#9ECBFF\">sh_host_rsa_key”\u003C/span>\u003Cspan style=\"color:#F97583\"> |\u003C/span>\u003Cspan style=\"color:#B392F0\"> Set-Acl\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $authorizedKeyFilePath\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Finally, restart the SSH server using this command.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">Restart-Service\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -Name\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> sshd\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Congrats! Your SSH server is now set up and ready to be accessed!\u003C/p>\n\u003Ch3 id=\"if-the-user-is-in-the-administrator-group\">If the user is in the ‘Administrator’ group:\u003C/h3>\n\u003Cp>Uncomment the following line in the sshd_config file.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">Match\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> Group\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> administrators\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">\tAuthorizedKeysFile\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> __PROGRAMDATA__/ssh/administrators_authorized_keys\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>The \u003Ccode>administrators_authorized_keys\u003C/code> file must be created, as it doesn’t exist by default. Run these commands back in the PowerShell terminal to create and open this file.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$authorizedKeyFilePath = “$env:ProgramData\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\s\u003C/span>\u003Cspan style=\"color:#E1E4E8\">sh\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\a\u003C/span>\u003Cspan style=\"color:#E1E4E8\">dministrators_authorized_keys”\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">New-Item\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $authorizedKeyFilePath\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">notepad.exe\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $authorizedKeyFilePath\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Paste the public key you want to use into this file. Save and close this file. Next, make sure the file has the correct permissions. Only the system account should be able to access it. Do this by running these commands.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">icacls.exe\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $authorizedKeyFilePath \u003C/span>\u003Cspan style=\"color:#9ECBFF\">/remove\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> “NT\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> AUTHORITY\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\A\u003C/span>\u003Cspan style=\"color:#9ECBFF\">uthenticated\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> Users”\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">icacls.exe\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $authorizedKeyFilePath \u003C/span>\u003Cspan style=\"color:#9ECBFF\">/inheritance:r\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">Get-Acl\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> “\u003C/span>\u003Cspan style=\"color:#E1E4E8\">$env\u003C/span>\u003Cspan style=\"color:#9ECBFF\">:ProgramData\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\s\u003C/span>\u003Cspan style=\"color:#9ECBFF\">sh\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\s\u003C/span>\u003Cspan style=\"color:#9ECBFF\">sh_host_rsa_key”\u003C/span>\u003Cspan style=\"color:#F97583\"> |\u003C/span>\u003Cspan style=\"color:#B392F0\"> Set-Acl\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $authorizedKeyFilePath\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Finally, restart the SSH server using this command.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">Restart-Service\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -Name\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> sshd\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Congrats! Your SSH server is now set up and ready to be accessed!\u003C/p>\n\u003Chr>\n\u003Cp>Sources Used:\u003C/p>\n\u003Cp>\u003Ca href=\"https://gist.github.com/teocci/5a96568ab9bf93a592d7a1a237ebb6ea\" target=\"_blank\" rel=\"noopener noreferrer\">teocci’s GitHub Gist\u003C/a> | \u003Ca href=\"https://dev.to/rkttu/set-up-an-ssh-server-in-windows-10-native-way-22d9\" target=\"_blank\" rel=\"noopener noreferrer\">Jeong Hyun Nam’s DEV Blog Post\u003C/a> | \u003Ca href=\"https://learn.microsoft.com/en-us/windows-server/administration/openssh/openssh_install_firstuse?tabs=powershell&#x26;pivots=windows-server-2022\" target=\"_blank\" rel=\"noopener noreferrer\">Official Microsoft OpenSSH “Getting Started” Page\u003C/a>\u003C/p>",{"headings":88,"localImagePaths":110,"remoteImagePaths":111,"frontmatter":112,"imagePaths":114},[89,92,95,98,101,104,107],{"depth":29,"slug":90,"text":91},"setting-up-an-openssh-server-on-windows-11","Setting up an OpenSSH Server on Windows 11",{"depth":32,"slug":93,"text":94},"step-1-installation","Step 1: Installation",{"depth":32,"slug":96,"text":97},"step-2-configuration","Step 2: Configuration",{"depth":32,"slug":99,"text":100},"optional-but-recommended-step-3-switch-from-cmd-to-powershell","(Optional, but Recommended) Step 3: Switch from CMD to PowerShell",{"depth":32,"slug":102,"text":103},"optional-but-recommended-step-4-configure-key-based-authorization","(Optional, but Recommended) Step 4: Configure Key Based Authorization",{"depth":36,"slug":105,"text":106},"if-the-user-is-not-in-the-administrator-group","If the user is NOT in the ‘Administrator’ group:",{"depth":36,"slug":108,"text":109},"if-the-user-is-in-the-administrator-group","If the user is in the ‘Administrator’ group:",[],[],{"title":76,"description":77,"pubDate":78,"image":79,"skills":113},[81],[],"Projects/sshServer.md","projects/doodlejump",{"id":116,"data":118,"body":126,"filePath":127,"digest":128,"rendered":129,"legacyId":147},{"title":119,"description":120,"pubDate":121,"image":57,"skills":122},"Doodle Jump on an FPGA","I implemented Doodle Jump on a RealDigital Urbana Board with an AMD Spartan 7 FPGA. I also implemented a MicroBlaze Processor to help wiht USB I/O from a keyboard and VGA/HDMI output. Who doesn't love Doodle Jump?","Dec 21, 2024",[123,124,125],"Embedded Systems/SoC","SystemVerilog","C","# Doodle Jump on an FPGA\n## Overview\n\u003Cstrong>Motivation:\u003C/strong> This project was done as my final project for ECE 385 - Digital Systems Laboratory at the University of Illinois at Urbana-Champaign. I have attached the final video demo here. I recieved an A on the final project and an A- in the course.\n\n\u003Cstrong>Tech Stack:\u003C/strong> SystemVerilog, C\n\nFor the final project, I implemented a simplified version of Doodle Jump on an \u003Ca href=\"https://www.amd.com/en/corporate/university-program/aup-boards/realdigital-urbana-board.html\" target=\"_blank\" rel=\"noopener noreferrer\">RealDigital Urbana Board\u003C/a>. Using a Spartan-7 FPGA with a MicroBlaze processor, I developed a real-time gaming environment that integrates gameplay mechanics, graphics, and keyboard controls. The game features character movement, random platform generation, collision detection, scoring, and an animated character, all rendered on a 640 by 480 screen. To achieve this, I implemented SPI communication for USB keyboard inputs and VGA-to-HDMI conversion. I designed custom modules for the gameplay features, showcasing the FPGA's capabilities through an interactive game.\n\n\u003Cstrong>Source Code: \u003C/strong>Unfortunately, due to ECE 385's strict course guidelines, I am unable to post my code to any online source at all. I have, however, attached my Final Project Lab Report, which has descriptions of how my code's functionality and how it was written, and Final Project Video Demo.\n\n\u003Cvideo width=\"560\" height=\"420\" controls>\n    \u003Csource src=\"path/to/your/video.mp4\" type=\"video/mp4\">\n    Your browser does not support the video tag.\n\u003C/video>\n\n---\n\n### Notes\n- Even though this was a partner class, my partner did not contribute to anything in this class from about Week 4 to the end. He didn't download the given files from the 5th lab on, and did not make a single contribution to this final project.\n- This final project was built as an extension of the 6th lab in this course, so I have attached the lab report for both Lab 6 and the Final Project. To see all the design decisions I made, look through these reports.\n\n### Lab Reports\n\u003Ca href=\"../blog_files\\DoodleJump\\lab 6 report (1).pdf\" target=\"_blank\" rel=\"noopener noreferrer\">Lab 6 Report\u003C/a> | \u003Ca href=\"../blog_files\\DoodleJump\\Final Project Report.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">Final Project Report\u003C/a>","src/content/blog/Projects/doodleJump.md","075bae584448d75d",{"html":130,"metadata":131},"\u003Ch1 id=\"doodle-jump-on-an-fpga\">Doodle Jump on an FPGA\u003C/h1>\n\u003Ch2 id=\"overview\">Overview\u003C/h2>\n\u003Cp>\u003Cstrong>Motivation:\u003C/strong> This project was done as my final project for ECE 385 - Digital Systems Laboratory at the University of Illinois at Urbana-Champaign. I have attached the final video demo here. I recieved an A on the final project and an A- in the course.\u003C/p>\n\u003Cp>\u003Cstrong>Tech Stack:\u003C/strong> SystemVerilog, C\u003C/p>\n\u003Cp>For the final project, I implemented a simplified version of Doodle Jump on an \u003Ca href=\"https://www.amd.com/en/corporate/university-program/aup-boards/realdigital-urbana-board.html\" target=\"_blank\" rel=\"noopener noreferrer\">RealDigital Urbana Board\u003C/a>. Using a Spartan-7 FPGA with a MicroBlaze processor, I developed a real-time gaming environment that integrates gameplay mechanics, graphics, and keyboard controls. The game features character movement, random platform generation, collision detection, scoring, and an animated character, all rendered on a 640 by 480 screen. To achieve this, I implemented SPI communication for USB keyboard inputs and VGA-to-HDMI conversion. I designed custom modules for the gameplay features, showcasing the FPGA’s capabilities through an interactive game.\u003C/p>\n\u003Cp>\u003Cstrong>Source Code: \u003C/strong>Unfortunately, due to ECE 385’s strict course guidelines, I am unable to post my code to any online source at all. I have, however, attached my Final Project Lab Report, which has descriptions of how my code’s functionality and how it was written, and Final Project Video Demo.\u003C/p>\n\u003Cvideo width=\"560\" height=\"420\" controls>\n    \u003Csource src=\"path/to/your/video.mp4\" type=\"video/mp4\">\n    Your browser does not support the video tag.\n\u003C/video>\n\u003Chr>\n\u003Ch3 id=\"notes\">Notes\u003C/h3>\n\u003Cul>\n\u003Cli>Even though this was a partner class, my partner did not contribute to anything in this class from about Week 4 to the end. He didn’t download the given files from the 5th lab on, and did not make a single contribution to this final project.\u003C/li>\n\u003Cli>This final project was built as an extension of the 6th lab in this course, so I have attached the lab report for both Lab 6 and the Final Project. To see all the design decisions I made, look through these reports.\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"lab-reports\">Lab Reports\u003C/h3>\n\u003Cp>\u003Ca href=\"../blog_files\\DoodleJump\\lab 6 report (1).pdf\" target=\"_blank\" rel=\"noopener noreferrer\">Lab 6 Report\u003C/a> | \u003Ca href=\"../blog_files\\DoodleJump\\Final Project Report.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">Final Project Report\u003C/a>\u003C/p>",{"headings":132,"localImagePaths":142,"remoteImagePaths":143,"frontmatter":144,"imagePaths":146},[133,135,136,139],{"depth":29,"slug":134,"text":119},"doodle-jump-on-an-fpga",{"depth":32,"slug":33,"text":34},{"depth":36,"slug":137,"text":138},"notes","Notes",{"depth":36,"slug":140,"text":141},"lab-reports","Lab Reports",[],[],{"title":119,"description":120,"pubDate":121,"image":57,"skills":145},[123,124,125],[],"Projects/doodleJump.md","projects/portfoliowebsitev2",{"id":148,"data":150,"body":161,"filePath":162,"digest":163,"rendered":164,"legacyId":177},{"title":151,"description":152,"pubDate":153,"image":154,"skills":155},"Porfolio Website v2","This is the site you are currently looking at. I built it because I felt my old one was kind of boring and lackluster. This one is built with Astro, hosted on GCP and is much easier to add pages to.","Jul 11, 2025","/images/previews/site.png",[156,157,158,159,160],"Front End Development","Back-End/Cloud Development","GCP","JavaScript","HTML","# Portfolio Website v2\n## Overview\n\n\n```{sql}\ncreate table public.\"Engagement\" (\n  slug character varying not null,\n  views bigint null default '0'::bigint,\n  constraint Engagement_pkey primary key (slug)\n) TABLESPACE pg_default;\n\ncreate table public.\"ViewerLogs\" (\n  id bigint generated by default as identity not null,\n  slug character varying not null,\n  time timestamp without time zone null default (now() AT TIME ZONE 'utc-6'::text),\n  \"sentIP\" character varying null,\n  constraint ViewerLogs_pkey primary key (id),\n  constraint PastDayViews_slug_fkey foreign KEY (slug) references \"Engagement\" (slug) on update CASCADE\n) TABLESPACE pg_default;\n```","src/content/blog/Projects/portfolioWebsitev2.md","b747d36087c15876",{"html":165,"metadata":166},"\u003Ch1 id=\"portfolio-website-v2\">Portfolio Website v2\u003C/h1>\n\u003Ch2 id=\"overview\">Overview\u003C/h2>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>create table public.\"Engagement\" (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>  slug character varying not null,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>  views bigint null default '0'::bigint,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>  constraint Engagement_pkey primary key (slug)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>) TABLESPACE pg_default;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>create table public.\"ViewerLogs\" (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>  id bigint generated by default as identity not null,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>  slug character varying not null,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>  time timestamp without time zone null default (now() AT TIME ZONE 'utc-6'::text),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>  \"sentIP\" character varying null,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>  constraint ViewerLogs_pkey primary key (id),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>  constraint PastDayViews_slug_fkey foreign KEY (slug) references \"Engagement\" (slug) on update CASCADE\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>) TABLESPACE pg_default;\u003C/span>\u003C/span>\u003C/code>\u003C/pre>",{"headings":167,"localImagePaths":172,"remoteImagePaths":173,"frontmatter":174,"imagePaths":176},[168,171],{"depth":29,"slug":169,"text":170},"portfolio-website-v2","Portfolio Website v2",{"depth":32,"slug":33,"text":34},[],[],{"title":151,"description":152,"pubDate":153,"image":154,"skills":175},[156,157,158,159,160],[],"Projects/portfolioWebsitev2.md","projects/portfoliowebsitev1",{"id":178,"data":180,"body":184,"filePath":185,"digest":186,"rendered":187,"legacyId":200},{"title":181,"description":182,"pubDate":121,"image":57,"skills":183},"Porfolio Website v1","This was my old portfolio website. I built it to show off my software engineering skills and project. This project is still live and is hosted for free on GitHub Pages.",[156,159,160],"# Portfolio Website v1\n## Overview","src/content/blog/Projects/portfolioWebsitev1.md","894c3d98b711afe5",{"html":188,"metadata":189},"\u003Ch1 id=\"portfolio-website-v1\">Portfolio Website v1\u003C/h1>\n\u003Ch2 id=\"overview\">Overview\u003C/h2>",{"headings":190,"localImagePaths":195,"remoteImagePaths":196,"frontmatter":197,"imagePaths":199},[191,194],{"depth":29,"slug":192,"text":193},"portfolio-website-v1","Portfolio Website v1",{"depth":32,"slug":33,"text":34},[],[],{"title":181,"description":182,"pubDate":121,"image":57,"skills":198},[156,159,160],[],"Projects/portfolioWebsitev1.md"]